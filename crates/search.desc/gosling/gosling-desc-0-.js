searchState.loadedDescShard("gosling", 0, "Gosling\nImplementation of the Gosling protocol\nThe gosling protocol implementation.\nEvents to signal completion of asynchronous <code>Context</code> …\nFailure ocurred in outgoing endpoint handshake\nAn endpoint client has successfully completed an endpoint …\nAn outgoing endpoint handshake has failed.\nAn endpoint server has received a request for a channel …\nFailure ocurred in incoming endpoint handshake\nAn endpoint server’s handshake has completed\nAn incoming endpoint handshake has failed.\nAn endpoint server has rejected an endpoint client’s …\nAn endpoint server has received an incoming connection and …\nThe endpoint server’s onion-service has been published …\nThe error type for the <code>Context</code> type.\nA handle to an in-progres identity or endpoint handshake\nProvided handle does not map to an in-flight handshake\nAn underlying <code>honk_rpc::honk_rpc::Error</code>\nAn identity client has received a challenge request from …\nFailure ocurred in outgoing identity handshake\nAn identity client has successfully completed an identity …\nAn incoming identit handshake has failed\nAn identity server has received a challenge response from …\nAn identity server has received a request for an endpoint …\nFailure ocurred in incoming identity handshake\nAn identity server’s handshake has completed.\nAn incoming identity handshake has failed.\nAn identity server has rejected an identity client’s …\nAn identity server has received an incoming connection and …\nThe identity server’s onion-service has been published …\nRequesting an invalid operation\nAn invalid argument was provided to a function\nAn underlying <code>std::io::Error</code>\nTor bootstrap completed\nTor bootstrap progress\nAn underlying <code>tor_interface::tor_crypto::Error</code>\nHuman-readable logs from the <code>Context</code>’s <code>TorProvider</code>\nFunction requiring tor connectivity called before bootstrap\nAn underlying <code>tor_interface::tor_provider::Error</code>\nInitiate bootstrap of the <code>Context</code>’s owned <code>TorProvider</code>. …\nA direct pass-through to the underlying <code>TorProvider</code>’s …\nAbort an in-process outgoing endpoint handshake\nInitiate an endpoint handshake with an identity server. An …\nHandle an endpoint client’s incoming channel request. …\nStart one of this <code>Context</code>’s endpoint servers. Publish …\nStop one of this <code>Context</code>’s endpoint servers and ends any …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA direct pass-through to the underlying <code>TorProvider</code>’s …\nAbort an in-process outgoing identity handshake.\nInitiate an identity handshake with an identity server. …\nHandle an identity server’s endpoint challenge. Callers …\nHandle an identity client’s incoming endpoint …\nHandle an identity client’s incoming endpoint request. …\nStart this <code>Context</code>’s identity server. Publish status is …\nStops this <code>Context</code>’s identity server and ends any …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a new <code>Context</code> object.\nA direct pass-through to the underlying <code>TorProvider</code>’s …\nThis function updates the <code>Context</code>’s underlying …\nAn application specific challenge response object created …\n<code>false</code> if the client’s challenge response was not suitable\nThe ASCII-encoded name of the requested channel on the …\nThe ASCII-encoded name of the client’s requested channel\n<code>false</code> if the client was rejected based on their …\n<code>false</code> if the client was rejected based on their …\nThe private x25519 client-auth key required to access the …\nThe public x25519 client-auth key used to encrypt the …\n<code>false</code> if the client fails its x25519 key-ownership proof …\n<code>false</code> if the client failed its authentication proof (i.e. …\n<code>false</code> if the client failed its authentication proof (i.e. …\n<code>false</code> if the requested channel name was not understood by …\n<code>false</code> if the requested endpoint name was not understood by …\nThe alleged onion-service service-id of the connecting …\nThe onion-service service-id of the authenticated client\nThe alleged onion-service service-id of the connecting …\nThe onion-service service-id of the connected client\nAn application specific challenge object used by the …\nThe ASCII-encoded name of the requested endpoint server\nThe ASCII-encoded name of the requested endpoint server\nThe name of the published endpoint server\nThe ed25519 private key of requested endpoint server\nThe onion-service service-id of the requested endpoint …\nThe onion-service service-id of the endpoint server the …\nThe onion-service service-id of the published endpoint …\nThe onion-service service-id of the endpoint server which …\nThe handle of the in-progress handshake\nThe handle of the completed handshake\nThe handle of the failed handshake\nThe handle of the new handshake\nThe handle of the in-progress handshake\nThe handle of the in-progress handshake\nThe handle of the completed handshake\nThe handle of the rejected handshake\nThe handle of the failed handshake\nThe handle of the completed handshake\nThe handle of the failed handshake\nThe handle of the new handshake\nThe handle of the in-progress handshake\nThe handle of the completed handshake\nThe handle of the rejected handshake\nThe handle of the failed handshake\nThe onion-service service-id of the identity server the …\nHuman-readable debug log\nBootstrap percent compeletion\nThe failure reason\nThe failure reason\nThe failure reason\nThe failure reason\nThe ASCII-encoded name of the requested channel\nThe ASCII-encoded name of the requested endpoint server\nThe resulting TCP connection to the endpoint server\nThe resulting TCP connection to tohe endpoint clientt\nA longer human-readable summary of the bootstrap progress\nA short string indicating the completed bootstrap step")