var searchIndex = JSON.parse('{\
"gosling":{"doc":"","t":"AAAAAADENNNNNNNNGRNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMMENNNNLLLLLLLLLLLLLNENNNLLLLLLLLLLLLLNNNENNNNNNNNNNENNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNENNNNLLLLLLLLLLLLLNNENNNLLLLLLLLLLLLL","n":["context","endpoint_client","endpoint_server","gosling","identity_client","identity_server","Context","ContextEvent","EndpointClientHandshakeCompleted","EndpointClientHandshakeFailed","EndpointServerChannelRequestReceived","EndpointServerHandshakeCompleted","EndpointServerHandshakeFailed","EndpointServerHandshakeRejected","EndpointServerHandshakeStarted","EndpointServerPublished","HandshakeHandle","INVALID_HANDSHAKE_HANDLE","IdentityClientChallengeReceived","IdentityClientHandshakeCompleted","IdentityClientHandshakeFailed","IdentityServerChallengeResponseReceived","IdentityServerEndpointRequestReceived","IdentityServerHandshakeCompleted","IdentityServerHandshakeFailed","IdentityServerHandshakeRejected","IdentityServerHandshakeStarted","IdentityServerPublished","TorBootstrapCompleted","TorBootstrapStatusReceived","TorLogReceived","bootstrap","borrow","borrow","borrow_mut","borrow_mut","endpoint_client_abort_handshake","endpoint_client_begin_handshake","endpoint_server_handle_channel_request_received","endpoint_server_start","endpoint_server_stop","fmt","from","from","identity_client_abort_handshake","identity_client_begin_handshake","identity_client_handle_challenge_received","identity_server_handle_challenge_response_received","identity_server_handle_endpoint_request_received","identity_server_start","identity_server_stop","into","into","new","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","challenge_response","challenge_response_valid","channel_name","channel_name","client_allowed","client_allowed","client_auth_private_key","client_auth_public_key","client_auth_signature_valid","client_proof_signature_valid","client_proof_signature_valid","client_requested_channel_valid","client_requested_endpoint_valid","client_service_id","client_service_id","client_service_id","client_service_id","endpoint_challenge","endpoint_name","endpoint_name","endpoint_name","endpoint_private_key","endpoint_service_id","endpoint_service_id","endpoint_service_id","endpoint_service_id","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","identity_service_id","line","progress","reason","reason","reason","reason","requested_channel","requested_endpoint","stream","stream","summary","tag","Error","HonkRPCFailure","IncorrectUsage","InvalidState","UnexpectedResponseReceived","borrow","borrow_mut","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","vzip","BadClient","Error","HonkRPCFailure","IncorrectUsage","InvalidState","borrow","borrow_mut","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","vzip","BadVersion","EndpointClientError","EndpointServerError","Error","Failure","HandshakeHandleNotFound","HonkRpc","IdentityClientError","IdentityServerError","IncorrectUsage","InvalidArg","InvalidArgument","Io","RequestCookieRequired","RpcError","TorCrypto","TorNotConnected","TorProvider","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","source","to_string","try_from","try_from","try_from","try_from_primitive","try_into","try_into","type_id","type_id","vzip","vzip","ClientCreationFailed","EndpointChallengeResponseTooLarge","Error","HonkRPCFailure","IncorrectUsage","InvalidState","UnexpectedResponseReceived","borrow","borrow_mut","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","vzip","BadClient","EndpointChallengeTooLarge","Error","HonkRPCFailure","IncorrectUsage","InvalidState","borrow","borrow_mut","fmt","fmt","from","from","into","source","to_string","try_from","try_into","type_id","vzip"],"q":[[0,"gosling"],[6,"gosling::context"],[63,"gosling::context::ContextEvent"],[118,"gosling::endpoint_client"],[136,"gosling::endpoint_server"],[154,"gosling::gosling"],[207,"gosling::identity_client"],[227,"gosling::identity_server"],[246,"core::result"],[247,"tor_interface::tor_crypto"],[248,"tor_interface::tor_crypto"],[249,"tor_interface::tor_crypto"],[250,"core::fmt"],[251,"tor_interface::tor_provider"],[252,"alloc::boxed"],[253,"core::time"],[254,"core::option"],[255,"core::any"],[256,"alloc::collections::vec_deque"],[257,"honk_rpc::honk_rpc"],[258,"core::error"],[259,"std::io::error"],[260,"tor_interface::tor_provider"]],"d":["","","","","","","","","","","","","","","","","cbindgen:ignore","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","cbindgen:ignore","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","",""],"i":[0,0,0,0,0,0,0,0,12,12,12,12,12,12,12,12,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,1,1,12,1,12,1,1,1,1,1,12,1,12,1,1,1,1,1,1,1,1,12,1,1,12,1,12,1,12,1,1,12,35,36,37,38,36,39,40,41,36,36,39,39,36,42,41,43,38,44,40,41,45,41,40,37,45,38,44,40,46,47,42,35,41,36,48,37,49,50,43,38,39,51,40,52,53,46,48,49,51,43,42,37,38,53,53,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,27,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,28,3,3,0,28,3,3,3,3,3,28,3,3,28,0,3,3,3,28,3,28,3,28,28,28,28,28,3,3,28,3,3,3,3,3,3,3,3,3,28,3,3,3,28,28,3,28,28,3,28,3,28,3,30,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,33,33,0,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[1,5],[[4,[2,3]]]],[[1,6,7,8],[[4,[5,3]]]],[[1,5,9],[[4,[2,3]]]],[[1,10,8,6,11],[[4,[2,3]]]],[[1,6],[[4,[2,3]]]],[[12,13],14],[-1,-1,[]],[-1,-1,[]],[[1,5],[[4,[2,3]]]],[[1,6,8],[[4,[5,3]]]],[[1,5,15],[[4,[2,3]]]],[[1,5,9],[[4,[2,3]]]],[[1,5,9,9,15],[[4,[2,3]]]],[1,[[4,[2,3]]]],[1,[[4,[2,3]]]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[16]],18,18,19,20,[21,[19]],10],[[4,[1,3]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[1,[[4,[[23,[12]],3]]]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[24,13],14],[[24,13],14],[-1,-1,[]],[25,24],[-1,-2,[],[]],[24,[[21,[26]]]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[27,13],14],[[27,13],14],[25,27],[-1,-1,[]],[-1,-2,[],[]],[27,[[21,[26]]]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,28],9],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[28,13],14],[[3,13],14],[[3,13],14],[-1,-1,[]],[24,3],[25,3],[29,3],[30,3],[31,3],[32,3],[-1,-1,[]],[27,3],[33,3],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[21,[26]]]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[20,[[4,[28,[34,[28]]]]]],[-1,[[4,[-2]]],[],[]],[[],[[4,[28,[34,[28]]]]]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,22,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[30,13],14],[[30,13],14],[-1,-1,[]],[25,30],[-1,-2,[],[]],[30,[[21,[26]]]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[[33,13],14],[[33,13],14],[25,33],[-1,-1,[]],[-1,-2,[],[]],[33,[[21,[26]]]],[-1,8,[]],[-1,[[4,[-2]]],[],[]],[-1,[[4,[-2]]],[],[]],[-1,22,[]],[-1,-2,[],[]]],"c":[],"p":[[3,"Context",6],[15,"tuple"],[4,"Error",154],[4,"Result",246],[6,"HandshakeHandle",6],[3,"V3OnionServiceId",247],[3,"X25519PrivateKey",247],[3,"String",248],[15,"bool"],[3,"Ed25519PrivateKey",247],[3,"X25519PublicKey",247],[4,"ContextEvent",6],[3,"Formatter",249],[6,"Result",249],[3,"Document",250],[8,"TorProvider",251],[3,"Box",252],[15,"u16"],[3,"Duration",253],[15,"i32"],[4,"Option",254],[3,"TypeId",255],[3,"VecDeque",256],[4,"Error",118],[4,"Error",257],[8,"Error",258],[4,"Error",136],[4,"RpcError",154],[3,"Error",259],[4,"Error",207],[4,"Error",251],[4,"Error",247],[4,"Error",227],[3,"TryFromPrimitiveError",260],[13,"IdentityServerChallengeResponseReceived",63],[13,"IdentityServerHandshakeRejected",63],[13,"EndpointClientHandshakeCompleted",63],[13,"EndpointServerHandshakeCompleted",63],[13,"EndpointServerHandshakeRejected",63],[13,"IdentityClientHandshakeCompleted",63],[13,"IdentityServerHandshakeCompleted",63],[13,"IdentityServerEndpointRequestReceived",63],[13,"EndpointServerChannelRequestReceived",63],[13,"IdentityClientChallengeReceived",63],[13,"EndpointServerPublished",63],[13,"IdentityClientHandshakeFailed",63],[13,"IdentityServerHandshakeStarted",63],[13,"IdentityServerHandshakeFailed",63],[13,"EndpointClientHandshakeFailed",63],[13,"EndpointServerHandshakeStarted",63],[13,"EndpointServerHandshakeFailed",63],[13,"TorLogReceived",63],[13,"TorBootstrapStatusReceived",63]],"b":[[125,"impl-Display-for-Error"],[126,"impl-Debug-for-Error"],[143,"impl-Display-for-Error"],[144,"impl-Debug-for-Error"],[181,"impl-Display-for-Error"],[182,"impl-Debug-for-Error"],[184,"impl-From%3CError%3E-for-Error"],[185,"impl-From%3CError%3E-for-Error"],[186,"impl-From%3CError%3E-for-Error"],[187,"impl-From%3CError%3E-for-Error"],[188,"impl-From%3CError%3E-for-Error"],[189,"impl-From%3CError%3E-for-Error"],[191,"impl-From%3CError%3E-for-Error"],[192,"impl-From%3CError%3E-for-Error"],[216,"impl-Debug-for-Error"],[217,"impl-Display-for-Error"],[235,"impl-Debug-for-Error"],[236,"impl-Display-for-Error"]]},\
"honk_rpc":{"doc":"","t":"AINNNNRRENENNNNNNNNNGNNNNENNNNNNDNNNNNNLLLLLLLLLLLLLLLKLLLLLLLLLFLLFFFLLLLLKLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["honk_rpc","ApiSet","BsonDocumentParseFailed","BsonDocumentSizeTooLarge","BsonDocumentSizeTooSmall","BsonParseFailed","DEFAULT_MAX_MESSAGE_SIZE","DEFAULT_MAX_WAIT_TIME","Error","Error","ErrorCode","InvalidMaxMesageSize","MessageConversionFailed","MessageParseFailed","MessageReadTimedOut","MessageTooBig","MessageVersionIncompatible","MessageWriteFailed","Pending","ReaderReadFailed","RequestCookie","RequestCookieInvalid","RequestFunctionInvalid","RequestNamespaceInvalid","RequestVersionInvalid","Response","ResponseCookieInvalid","ResponseStateInvalid","Runtime","SectionIdUnknown","SectionParseFailed","SectionTooLarge","Session","Success","Success","Unknown","UnknownErrorSectionReceived","WriterFlushFailed","WriterWriteFailed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_call","client_drain_responses","client_next_response","eq","equivalent","equivalent","equivalent","exec_function","fmt","fmt","fmt","fmt","from","from","from","from","from","get_error_section_size","get_max_message_size","get_max_wait_time","get_message_overhead","get_request_section_size","get_response_section_size","into","into","into","into","into_stream","namespace","new","next_result","set_max_message_size","set_max_wait_time","source","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","vzip","vzip","vzip","vzip","cookie","cookie","cookie","error_code","result"],"q":[[0,"honk_rpc"],[1,"honk_rpc::honk_rpc"],[101,"honk_rpc::honk_rpc::Response"],[106,"bson::document"],[107,"core::result"],[108,"std::io"],[109,"std::io"],[110,"alloc::collections::vec_deque::drain"],[111,"core::option"],[112,"bson::bson"],[113,"core::fmt"],[114,"core::fmt"],[115,"core::time"],[116,"core::error"],[117,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,6,6,14,0,0,0,11,0,6,6,14,6,14,14,6,11,6,0,14,14,14,14,0,14,14,14,14,14,6,0,11,14,14,6,6,6,11,1,14,6,11,1,14,6,1,1,1,14,14,14,14,25,14,14,6,6,11,1,14,14,6,0,1,1,0,0,0,11,1,14,6,1,25,1,25,1,1,6,14,6,11,1,14,6,11,1,14,6,11,1,14,6,25,1,11,1,14,6,27,28,29,29,28],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]],2,2,3,4],[[7,[5,6]]],[8,9,10]],[[[1,[-1]]],[[12,[11]]],[8,9,10]],[[[1,[-1]]],[[13,[11]]],[8,9,10]],[[14,14],15],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,-2],15,[],[]],[[-1,2,3,4,[13,[5]]],[[7,[[13,[16]],14]]],[]],[[14,17],18],[[14,17],18],[[6,17],18],[[6,17],18],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[3,14],[-1,-1,[]],[[[13,[5]],[13,[19]],[13,[16]]],[[7,[20,6]]]],[[[1,[-1]]],20,[8,9,10]],[[[1,[-1]]],21,[8,9,10]],[[],[[7,[20,6]]]],[[[13,[5]],[13,[19]],19,[13,[3]],[13,[4]]],[[7,[20,6]]]],[[[13,[16]]],[[7,[20,6]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[1,[-1]]],-1,[8,9,10]],[-1,2,[]],[-1,[[1,[-1]]],[8,9,10]],[-1,[[13,[[22,[5,[13,[16]],14]]]]],[]],[[[1,[-1]],3],[[7,[22,6]]],[8,9,10]],[[[1,[-1]],21],22,[8,9,10]],[6,[[13,[23]]]],[-1,19,[]],[-1,19,[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,[[7,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,22,[]],[[[1,[-1]],[13,[[26,[25]]]]],[[7,[22,6]]],[8,9,10]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0],"c":[],"p":[[3,"Session",1],[15,"str"],[15,"i32"],[3,"Document",106],[6,"RequestCookie",1],[4,"Error",1],[4,"Result",107],[8,"Read",108],[8,"Write",108],[8,"Send",109],[4,"Response",1],[3,"Drain",110],[4,"Option",111],[4,"ErrorCode",1],[15,"bool"],[4,"Bson",112],[3,"Formatter",113],[6,"Result",113],[3,"String",114],[15,"usize"],[3,"Duration",115],[15,"tuple"],[8,"Error",116],[3,"TypeId",117],[8,"ApiSet",1],[15,"slice"],[13,"Pending",101],[13,"Success",101],[13,"Error",101]],"b":[[55,"impl-Debug-for-ErrorCode"],[56,"impl-Display-for-ErrorCode"],[57,"impl-Display-for-Error"],[58,"impl-Debug-for-Error"]]},\
"tor_interface":{"doc":"","t":"AAAANNNENNNDDNNNNNNNNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNEDDNNNNNNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNRRRRRRRDDDENNNEDRRDDRRRRRRNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLNNGNENNNEDDINNDEEINKLKKLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLKLLLLLLKKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLMMMMM","n":["legacy_tor_client","mock_tor_client","tor_crypto","tor_provider","AddOnionFailed","CircuitTokenInvalid","DelOnionFailed","Error","GetInfoNetListenersSocksFailed","GetInfoVersionFailed","LegacyControlStreamCreationFailed","LegacyOnionListener","LegacyTorClient","LegacyTorControllerCreationFailed","LegacyTorProcessAuthenticationFailed","LegacyTorProcessCreationFailed","LegacyTorProcessTooOld","NoSocksListenersFound","OnionClientAuthAddFailed","OnionClientAuthRemoveFailed","SetConfDisableNetwork0Failed","SetEventsFailed","Socks5ConnectionFailed","TcpListenerBindFailed","TcpListenerLocalAddrFailed","WaitAsyncEventsFailed","accept","add_client_auth","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","drop","fmt","fmt","from","from","from","generate_token","into","into","into","listener","new","release_token","remove_client_auth","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","version","vzip","vzip","vzip","ClientAlreadyBootstrapped","ClientNotBootstrapped","Error","MockOnionListener","MockTorClient","OnionServiceAuthInvalid","OnionServiceNoPublished","OnionServiceNotFound","OnionServiceRequiresOnionAuth","TcpListenerBindFailed","TcpListenerLocalAddrFailed","accept","add_client_auth","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","default","drop","drop","fmt","fmt","from","from","from","generate_token","into","into","into","listener","new","release_token","remove_client_auth","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","vzip","vzip","vzip","ConversionError","ED25519_PRIVATE_KEYBLOB_BASE64_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_HEADER_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_SIZE","ED25519_PRIVATE_KEY_SIZE","ED25519_PUBLIC_KEY_SIZE","ED25519_SIGNATURE_SIZE","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","Error","KeyInvalid","One","ParseError","SignBit","V3OnionServiceId","V3_ONION_SERVICE_ID_STRING_LENGTH","V3_ONION_SERVICE_ID_STRING_SIZE","X25519PrivateKey","X25519PublicKey","X25519_PRIVATE_KEY_BASE64_LENGTH","X25519_PRIVATE_KEY_BASE64_SIZE","X25519_PRIVATE_KEY_SIZE","X25519_PUBLIC_KEY_BASE32_LENGTH","X25519_PUBLIC_KEY_BASE32_SIZE","X25519_PUBLIC_KEY_SIZE","Zero","as_bytes","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_base32","from_base64","from_key_blob","from_private_key","from_private_key","from_private_key","from_private_x25519","from_public_key","from_raw","from_raw","from_raw","from_raw","from_raw","from_service_id","from_string","generate","generate","hash","hash","into","into","into","into","into","into","into","into","is_valid","partial_cmp","sign_message","sign_message","sign_message_ex","to_base32","to_base32","to_base64","to_bytes","to_bytes","to_bytes","to_key_blob","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify_x25519","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BootstrapComplete","BootstrapStatus","CircuitToken","Domain","Error","Generic","Ip","LogReceived","OnionAddr","OnionAddrV3","OnionListener","OnionListenerImpl","OnionService","OnionServicePublished","OnionStream","TargetAddr","TorEvent","TorProvider","V3","accept","accept","add_client_auth","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","connect","deref","deref_mut","eq","eq","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","generate_token","hash","hash","into","into","into","into","into","into","into","listener","local_addr","new","partial_cmp","partial_cmp","peer_addr","read","release_token","remove_client_auth","service_id","set_nonblocking","set_nonblocking","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","line","progress","service_id","summary","tag"],"q":[[0,"tor_interface"],[4,"tor_interface::legacy_tor_client"],[67,"tor_interface::mock_tor_client"],[120,"tor_interface::tor_crypto"],[288,"tor_interface::tor_provider"],[415,"tor_interface::tor_provider::TorEvent"],[420,"core::option"],[421,"std::io::error"],[422,"core::result"],[423,"core::fmt"],[424,"core::fmt"],[425,"core::error"],[426,"alloc::string"],[427,"core::any"],[428,"alloc::vec"],[429,"core::cmp"],[430,"core::hash"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","The number of bytes needed to store base64 encoded ed25519 …","The number of bytes needed to store the keyblob header","The number of bytes needed to store ed25519 private …","The number of bytes needed to store ed25519 private …","The number of bytes in an ed25519 secret key …","The number of bytes in an ed25519 public key …","The number of bytes in an ed25519 signature cbindgen:ignore","","","","","","","","","","The number of bytes needed to store onion service id as an …","The number of bytes needed to store onion service id as an …","","","The number of bytes needed to store base64 encoded x25519 …","The number of bytes needed to store base64 encoded x25519 …","The number of bytes in an x25519 private key …","The number of bytes needed to store base32 encoded x25519 …","The number of bytes needed to store bsae32 encoded x25519 …","The number of bytes in an x25519 publickey cbindgen:ignore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,13,13,13,0,13,13,13,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,1,6,6,1,6,13,1,6,13,6,1,13,13,1,6,13,6,1,6,13,6,6,6,6,1,13,13,1,6,13,1,6,13,1,6,13,6,6,1,6,13,29,29,0,0,0,29,29,29,29,29,29,27,28,28,27,28,29,27,28,29,28,28,27,28,29,29,27,28,29,28,27,28,29,28,28,28,28,27,29,29,27,28,29,27,28,29,27,28,29,28,27,28,29,36,0,0,0,0,0,0,0,0,0,0,0,36,34,36,0,0,0,0,0,0,0,0,0,0,0,0,34,30,17,7,16,36,30,33,8,17,7,34,16,36,30,33,8,17,7,34,16,30,33,8,17,7,34,16,30,33,8,17,7,34,7,16,30,33,8,17,7,16,36,36,30,33,8,17,7,7,16,36,30,33,8,17,7,34,34,17,8,16,30,17,7,16,7,16,30,33,8,17,30,7,16,8,17,7,16,36,30,33,8,17,7,34,7,7,16,8,16,30,17,8,16,33,8,16,16,30,33,8,17,7,34,36,7,16,36,30,33,8,17,7,34,16,36,30,33,8,17,7,34,16,36,30,33,8,17,7,34,33,33,16,36,30,33,8,17,7,34,25,25,0,41,0,10,41,25,0,0,0,0,41,25,0,0,0,0,40,43,19,44,44,2,19,39,40,41,25,10,2,19,39,40,41,25,10,39,40,41,39,40,41,39,40,44,2,2,39,40,2,39,39,40,40,41,25,10,10,2,19,39,40,41,25,10,10,10,44,39,40,2,19,39,40,41,25,10,44,2,39,39,40,2,2,44,44,39,43,19,39,40,41,39,40,10,2,2,19,39,40,41,25,10,2,19,39,40,41,25,10,2,19,39,40,41,25,10,44,2,19,39,40,41,25,10,2,45,46,47,46,46],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,[[5,[[3,[2]],4]]]],[[6,7,8],[[5,[9,10]]]],[6,[[5,[9,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,7,11,[3,[12]]],[[5,[2,10]]]],[1,9],[[13,14],15],[[13,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[6,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[6,16,11,[3,[[18,[17]]]]],[[5,[19,10]]]],[[20,20],[[5,[6,13]]]],[[6,12],9],[[6,7],[[5,[9,10]]]],[[1,21],[[5,[9,4]]]],[13,[[3,[22]]]],[-1,23,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[6,[[5,[[26,[25]],10]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,[27,[[5,[[3,[2]],4]]]],[[28,7,8],[[5,[9,10]]]],[28,[[5,[9,10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,7,11,[3,[12]]],[[5,[2,10]]]],[[],28],[27,9],[28,9],[[29,14],15],[[29,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[28,12],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[28,16,11,[3,[[18,[17]]]]],[[5,[19,10]]]],[[],28],[[28,12],9],[[28,7],[[5,[9,10]]]],[[27,21],[[5,[9,4]]]],[29,[[3,[22]]]],[-1,23,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[28,[[5,[[26,[25]],10]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[30,[[32,[31]]]],[17,[[32,[31]]]],[7,[[32,[31]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[16,16],[30,30],[33,33],[8,8],[17,17],[7,7],[34,34],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[7,7],35],[[16,16],21],[[30,30],21],[[33,33],21],[[8,8],21],[[17,17],21],[[7,7],21],[[16,14],15],[[36,14],15],[[36,14],15],[[30,14],15],[[33,14],15],[[8,14],15],[[17,14],15],[[7,14],15],[[7,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[21,34],[-1,-1,[]],[37,[[5,[17,36]]]],[37,[[5,[8,36]]]],[37,[[5,[16,36]]]],[16,30],[8,17],[16,7],[8,[[5,[[9,[16,34]],36]]]],[30,7],[[[32,[31]]],[[5,[16,36]]]],[[[32,[31]]],[[5,[30,36]]]],[[[32,[31]]],[[5,[33,36]]]],[[[32,[31]]],[[5,[8,36]]]],[[[32,[31]]],17],[7,[[5,[30,36]]]],[37,[[5,[7,36]]]],[[],16],[[],8],[[17,-1],9,38],[[7,-1],9,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[37,21],[[7,7],[[3,[35]]]],[[16,[18,[31]]],33],[[8,[18,[31]]],[[5,[[9,[33,34]],36]]]],[[16,30,[18,[31]]],33],[30,23],[17,23],[8,23],[16,[[32,[31]]]],[33,[[32,[31]]]],[8,[[32,[31]]]],[16,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,23,[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[33,[18,[31]],30],21],[[33,[18,[31]],17,34],21],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,[[5,[[3,[2]],4]]],[]],[19,[[5,[[3,[2]],4]]]],[[-1,7,8],[[5,[9,10]]],[]],[-1,[[5,[9,10]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[39,39],[40,40],[41,41],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[-1,-2],9,[],[]],[[39,39],35],[[40,40],35],[[-1,7,11,[3,[12]]],[[5,[2,10]]],[]],[2],[2],[[39,39],21],[[40,40],21],[2,[[5,[9,4]]]],[[39,14],15],[[39,14],15],[[40,14],15],[[40,14],15],[[41,14],15],[[25,14],15],[[10,14],15],[[10,14],15],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[29,10],[-1,-1,[]],[13,10],[-1,12,[]],[[39,-1],9,38],[[40,-1],9,38],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[-1,16,11,[3,[[18,[17]]]]],[[5,[19,10]]],[]],[2,[[3,[40]]]],[[7,11],39],[[39,39],[[3,[35]]]],[[40,40],[[3,[35]]]],[2,[[3,[41]]]],[[2,[18,[31]]],[[5,[42,4]]]],[[-1,12],9,[]],[[-1,7],[[5,[9,10]]],[]],[39,7],[[-1,21],[[5,[9,4]]],[]],[[19,21],[[5,[9,4]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,23,[]],[-1,23,[]],[-1,23,[]],[2,[[5,[2,4]]]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,[[5,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,[[5,[[26,[25]],10]]],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[2,[18,[31]]],[[5,[42,4]]]],0,0,0,0,0],"c":[],"p":[[3,"LegacyOnionListener",4],[3,"OnionStream",288],[4,"Option",420],[3,"Error",421],[4,"Result",422],[3,"LegacyTorClient",4],[3,"V3OnionServiceId",120],[3,"X25519PrivateKey",120],[15,"tuple"],[4,"Error",288],[15,"u16"],[6,"CircuitToken",288],[4,"Error",4],[3,"Formatter",423],[6,"Result",423],[3,"Ed25519PrivateKey",120],[3,"X25519PublicKey",120],[15,"slice"],[3,"OnionListener",288],[3,"Path",424],[15,"bool"],[8,"Error",425],[3,"String",426],[3,"TypeId",427],[4,"TorEvent",288],[3,"Vec",428],[3,"MockOnionListener",67],[3,"MockTorClient",67],[4,"Error",67],[3,"Ed25519PublicKey",120],[15,"u8"],[15,"array"],[3,"Ed25519Signature",120],[4,"SignBit",120],[4,"Ordering",429],[4,"Error",120],[15,"str"],[8,"Hasher",430],[3,"OnionAddrV3",288],[4,"OnionAddr",288],[4,"TargetAddr",288],[15,"usize"],[8,"OnionListenerImpl",288],[8,"TorProvider",288],[13,"LogReceived",415],[13,"BootstrapStatus",415],[13,"OnionServicePublished",415]],"b":[[37,"impl-Debug-for-Error"],[38,"impl-Display-for-Error"],[91,"impl-Debug-for-Error"],[92,"impl-Display-for-Error"],[189,"impl-Display-for-Error"],[190,"impl-Debug-for-Error"],[195,"impl-Debug-for-V3OnionServiceId"],[196,"impl-Display-for-V3OnionServiceId"],[339,"impl-Debug-for-OnionAddrV3"],[340,"impl-Display-for-OnionAddrV3"],[341,"impl-Display-for-OnionAddr"],[342,"impl-Debug-for-OnionAddr"],[345,"impl-Display-for-Error"],[346,"impl-Debug-for-Error"],[353,"impl-From%3CError%3E-for-Error"],[355,"impl-From%3CError%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
