var searchIndex = new Map(JSON.parse('[\
["gosling",{"doc":"","t":"CCCCCCFGPPPPPPPPISPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPPNNNNNNNNNNNNNNNNNNNNPGPPPNNNNNNNNNNNNNNNNNNNNPPPGPSSPPPPPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPPPPNNNNNNNNNNNNNNNNNNNNPPGPPPNNNNNNNNNNNNNNNNNNNN","n":["context","endpoint_client","endpoint_server","gosling","identity_client","identity_server","Context","ContextEvent","EndpointClientHandshakeCompleted","EndpointClientHandshakeFailed","EndpointServerChannelRequestReceived","EndpointServerHandshakeCompleted","EndpointServerHandshakeFailed","EndpointServerHandshakeRejected","EndpointServerHandshakeStarted","EndpointServerPublished","HandshakeHandle","INVALID_HANDSHAKE_HANDLE","IdentityClientChallengeReceived","IdentityClientHandshakeCompleted","IdentityClientHandshakeFailed","IdentityServerChallengeResponseReceived","IdentityServerEndpointRequestReceived","IdentityServerHandshakeCompleted","IdentityServerHandshakeFailed","IdentityServerHandshakeRejected","IdentityServerHandshakeStarted","IdentityServerPublished","TorBootstrapCompleted","TorBootstrapStatusReceived","TorLogReceived","as_any","as_any","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow_mut","borrow_mut","endpoint_client_abort_handshake","endpoint_client_begin_handshake","endpoint_server_handle_channel_request_received","endpoint_server_start","endpoint_server_stop","fmt","from","from","identity_client_abort_handshake","identity_client_begin_handshake","identity_client_handle_challenge_received","identity_server_handle_challenge_response_received","identity_server_handle_endpoint_request_received","identity_server_start","identity_server_stop","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","challenge_response","challenge_response_valid","channel_name","channel_name","client_allowed","client_allowed","client_auth_private_key","client_auth_public_key","client_auth_signature_valid","client_proof_signature_valid","client_proof_signature_valid","client_requested_channel_valid","client_requested_endpoint_valid","client_service_id","client_service_id","client_service_id","client_service_id","endpoint_challenge","endpoint_name","endpoint_name","endpoint_name","endpoint_private_key","endpoint_service_id","endpoint_service_id","endpoint_service_id","endpoint_service_id","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","identity_service_id","line","progress","reason","reason","reason","reason","requested_channel","requested_endpoint","stream","stream","summary","tag","Error","HonkRPCFailure","IncorrectUsage","InvalidState","UnexpectedResponseReceived","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip","BadClient","Error","HonkRPCFailure","IncorrectUsage","InvalidState","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip","BadVersion","EndpointClientError","EndpointServerError","Error","Failure","GOSLING_CRATE_VERSION","GOSLING_PROTOCOL_VERSION","HandshakeHandleNotFound","HonkRpc","IdentityClientError","IdentityServerError","IncorrectUsage","InvalidArg","InvalidArgument","Io","RequestCookieRequired","RpcError","TorCrypto","TorNotConnected","TorProvider","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","report","source","to_string","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into_slug","type_id","type_id","vzip","vzip","ClientCreationFailed","EndpointChallengeResponseTooLarge","Error","HonkRPCFailure","IncorrectUsage","InvalidState","UnexpectedResponseReceived","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip","BadClient","EndpointChallengeTooLarge","Error","HonkRPCFailure","IncorrectUsage","InvalidState","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip"],"q":[[0,"gosling"],[6,"gosling::context"],[72,"gosling::context::ContextEvent"],[127,"gosling::endpoint_client"],[152,"gosling::endpoint_server"],[177,"gosling::gosling"],[244,"gosling::identity_client"],[271,"gosling::identity_server"],[297,"core::any"],[298,"core::result"],[299,"tor_interface::tor_crypto"],[300,"tor_interface::tor_crypto"],[301,"tor_interface::tor_crypto"],[302,"core::fmt"],[303,"alloc::boxed"],[304,"alloc::sync"],[305,"alloc::rc"],[306,"tor_interface::tor_provider"],[307,"core::time"],[308,"core::option"],[309,"core::any"],[310,"honk_rpc::honk_rpc"],[311,"tor_error::report"],[312,"tor_error::report"],[313,"tor_persist::slug"],[314,"tor_persist::slug"],[315,"tor_interface::tor_provider"]],"d":["","","","","","","","","","","","","","","","","cbindgen:ignore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","cbindgen:ignore","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,13,13,13,13,13,13,13,13,0,0,13,13,13,13,13,13,13,13,13,13,13,13,13,2,13,2,13,2,2,13,2,13,2,2,2,2,2,13,2,13,2,2,2,2,2,2,2,2,13,2,13,13,2,13,2,2,13,2,13,2,13,2,2,13,42,43,44,45,43,46,47,48,43,43,46,46,43,49,48,50,45,51,47,48,52,48,47,44,52,45,51,47,53,54,49,42,48,43,55,44,56,57,50,45,46,58,47,59,60,53,55,56,58,50,49,44,45,60,60,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,34,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,35,4,4,0,35,0,0,4,4,4,4,4,35,4,4,35,0,4,4,4,35,4,35,4,35,4,35,4,35,35,35,35,35,4,4,35,4,4,4,4,4,4,4,4,4,35,4,35,4,35,4,35,4,4,4,4,35,35,4,35,35,4,4,35,4,35,4,36,36,0,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,38,38,0,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38],"f":"```````````````````````````````{cb{}}000{d{{j{fh}}}}{ce{}{}}000{{dl}{{j{fh}}}}{{dnA`Ab}{{j{lh}}}}{{dlAd}{{j{fh}}}}{{dAfAbnAh}{{j{fh}}}}{{dn}{{j{fh}}}}{{AjAl}An}{cc{}}06{{dnAb}{{j{lh}}}}{{dlB`}{{j{fh}}}}6{{dlAdAdB`}{{j{fh}}}};;::{{{Bb{c}}}{{Bb{b}}}{}}0{{{Bd{c}}}{{Bd{b}}}{}}{{{Bf{c}}}{{Bf{b}}}{}}0{{{Bb{Bh}}BjBjBlBn{C`{Bl}}Af}{{j{dh}}}}{c{{j{e}}}{}{}}000{cCb{}}0{d{{j{{Cd{Aj}}h}}}}{ce{}{}}0````````````````````````````````````````````````````````````{cb{}}011{{CfAl}An}0={ChCf}3:98{c{{Cl{Cj}}}{}}{Cf{{C`{Cn}}}}{cAb{}}99{c{{j{D`Db}}}{}}97`````6677{{DdAl}An}0{cc{}}{ChDd}:{{{Bb{c}}}{{Bb{b}}}{}}{{{Bd{c}}}{{Bd{b}}}{}}{{{Bf{c}}}{{Bf{b}}}{}}9{Dd{{C`{Cn}}}}8{c{{j{e}}}{}{}}08{cCb{}}{ce{}{}}````````````````````{cb{}}0001111{{DfDf}Ad}{{ce}Ad{}{}}00{{DfAl}An}{{hAl}An}0={Dhh}{Ddh}{Djh}{Dlh}{Dnh}{Cfh}{Chh}{cc{}}{E`h}>>{{{Bb{c}}}{{Bb{b}}}{}}0{{{Bd{c}}}{{Bd{b}}}{}}0{{{Bf{c}}}{{Bf{b}}}{}}0{c{{Cl{Cj}}}{}}{h{{C`{Cn}}}}{cAb{}}{c{{j{e}}}{}{}}{Bn{{j{Df{Eb{Df}}}}}}1{c{{j{Df{Eb{Df}}}}}{}}22{c{{j{D`Db}}}{}}{cCb{}}0{ce{}{}}0```````{cb{}}011{{DhAl}An}0?{ChDh}3>=<;{Dh{{C`{Cn}}}}:99654``````3344{{DlAl}An}0{ChDl}{cc{}}7{{{Bb{c}}}{{Bb{b}}}{}}{{{Bd{c}}}{{Bd{b}}}{}}{{{Bf{c}}}{{Bf{b}}}{}}{c{{Cl{Cj}}}{}}{Dl{{C`{Cn}}}}{cAb{}}{c{{j{e}}}{}{}}0{c{{j{D`Db}}}{}}{cCb{}}{ce{}{}}","c":[],"p":[[10,"Any",297],[5,"Context",6],[1,"unit"],[6,"Error",177],[6,"Result",298],[8,"HandshakeHandle",6],[5,"V3OnionServiceId",299],[5,"X25519PrivateKey",299],[5,"String",300],[1,"bool"],[5,"Ed25519PrivateKey",299],[5,"X25519PublicKey",299],[6,"ContextEvent",6],[5,"Formatter",301],[8,"Result",301],[5,"Document",302],[5,"Box",303],[5,"Arc",304],[5,"Rc",305],[10,"TorProvider",306],[1,"u16"],[5,"Duration",307],[1,"i32"],[6,"Option",308],[5,"TypeId",297],[5,"VecDeque",309],[6,"Error",127],[6,"Error",310],[5,"ReportHelper",311],[5,"Report",311],[10,"Error",312],[5,"Slug",313],[6,"BadSlug",313],[6,"Error",152],[6,"RpcError",177],[6,"Error",244],[6,"Error",299],[6,"Error",271],[5,"Error",314],[6,"Error",306],[5,"TryFromPrimitiveError",315],[15,"IdentityServerChallengeResponseReceived",72],[15,"IdentityServerHandshakeRejected",72],[15,"EndpointClientHandshakeCompleted",72],[15,"EndpointServerHandshakeCompleted",72],[15,"EndpointServerHandshakeRejected",72],[15,"IdentityClientHandshakeCompleted",72],[15,"IdentityServerHandshakeCompleted",72],[15,"IdentityServerEndpointRequestReceived",72],[15,"EndpointServerChannelRequestReceived",72],[15,"IdentityClientChallengeReceived",72],[15,"EndpointServerPublished",72],[15,"IdentityClientHandshakeFailed",72],[15,"IdentityServerHandshakeStarted",72],[15,"IdentityServerHandshakeFailed",72],[15,"EndpointClientHandshakeFailed",72],[15,"EndpointServerHandshakeStarted",72],[15,"EndpointServerHandshakeFailed",72],[15,"TorLogReceived",72],[15,"TorBootstrapStatusReceived",72]],"b":[[136,"impl-Debug-for-Error"],[137,"impl-Display-for-Error"],[161,"impl-Display-for-Error"],[162,"impl-Debug-for-Error"],[210,"impl-Display-for-Error"],[211,"impl-Debug-for-Error"],[213,"impl-From%3CError%3E-for-Error"],[214,"impl-From%3CError%3E-for-Error"],[215,"impl-From%3CError%3E-for-Error"],[216,"impl-From%3CError%3E-for-Error"],[217,"impl-From%3CError%3E-for-Error"],[218,"impl-From%3CError%3E-for-Error"],[219,"impl-From%3CError%3E-for-Error"],[221,"impl-From%3CError%3E-for-Error"],[255,"impl-Debug-for-Error"],[256,"impl-Display-for-Error"],[281,"impl-Display-for-Error"],[282,"impl-Debug-for-Error"]]}],\
["honk_rpc",{"doc":"","t":"CKPPPPSSGPGPPPPPPPPPIPPPPGPPPPPPFPPPPPPNNNNNNNNNNNNNNNMNNNNNNNNNHNNHHHNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNOOOOO","n":["honk_rpc","ApiSet","BsonDocumentParseFailed","BsonDocumentSizeTooLarge","BsonDocumentSizeTooSmall","BsonParseFailed","DEFAULT_MAX_MESSAGE_SIZE","DEFAULT_MAX_WAIT_TIME","Error","Error","ErrorCode","InvalidMaxMesageSize","MessageConversionFailed","MessageParseFailed","MessageReadTimedOut","MessageTooBig","MessageVersionIncompatible","MessageWriteFailed","Pending","ReaderReadFailed","RequestCookie","RequestCookieInvalid","RequestFunctionInvalid","RequestNamespaceInvalid","RequestVersionInvalid","Response","ResponseCookieInvalid","ResponseStateInvalid","Runtime","SectionIdUnknown","SectionParseFailed","SectionTooLarge","Session","Success","Success","Unknown","UnknownErrorSectionReceived","WriterFlushFailed","WriterWriteFailed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_call","client_drain_responses","client_next_response","eq","equivalent","equivalent","equivalent","exec_function","fmt","fmt","fmt","fmt","from","from","from","from","from","get_error_section_size","get_max_message_size","get_max_wait_time","get_message_overhead","get_request_section_size","get_response_section_size","into","into","into","into","into_stream","namespace","new","next_result","set_max_message_size","set_max_wait_time","source","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","vzip","vzip","vzip","vzip","cookie","cookie","cookie","error_code","result"],"q":[[0,"honk_rpc"],[1,"honk_rpc::honk_rpc"],[101,"honk_rpc::honk_rpc::Response"],[106,"bson::document"],[107,"core::result"],[108,"std::io"],[109,"std::io"],[110,"alloc::collections::vec_deque::drain"],[111,"core::option"],[112,"bson::bson"],[113,"core::fmt"],[114,"core::fmt"],[115,"core::time"],[116,"core::error"],[117,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,6,6,14,0,0,0,11,0,6,6,14,6,14,14,6,11,6,0,14,14,14,14,0,14,14,14,14,14,6,0,11,14,14,6,6,6,11,1,14,6,11,1,14,6,1,1,1,14,14,14,14,16,14,14,6,6,11,1,14,14,6,0,1,1,0,0,0,11,1,14,6,1,16,1,16,1,1,6,14,6,11,1,14,6,11,1,14,6,11,1,14,6,16,1,11,1,14,6,28,29,30,30,29],"f":"```````````````````````````````````````{ce{}{}}0000000{{{b{c}}ddfh}{{n{jl}}}{A`AbAd}}{{{b{c}}}{{Ah{Af}}}{A`AbAd}}{{{b{c}}}{{Aj{Af}}}{A`AbAd}}{{AlAl}An}{{ce}An{}{}}00{{B`dfh{Aj{j}}}{{n{{Aj{Bb}}Al}}}}{{AlBd}Bf}0{{lBd}Bf}0{cc{}}00{fAl}1{{{Aj{j}}{Aj{Bh}}{Aj{Bb}}}{{n{Bjl}}}}{{{b{c}}}Bj{A`AbAd}}{{{b{c}}}Bl{A`AbAd}}{{}{{n{Bjl}}}}{{{Aj{j}}{Aj{Bh}}Bh{Aj{f}}{Aj{h}}}{{n{Bjl}}}}{{{Aj{Bb}}}{{n{Bjl}}}}{ce{}{}}000{{{b{c}}}c{A`AbAd}}{B`d}{c{{b{c}}}{A`AbAd}}{B`{{Aj{{Bn{j{Aj{Bb}}Al}}}}}}{{{b{c}}f}{{n{C`l}}}{A`AbAd}}{{{b{c}}Bl}C`{A`AbAd}}{l{{Aj{Cb}}}}{cBh{}}0{c{{n{e}}}{}{}}0000000{cCd{}}000{B`C`}{{{b{c}}{Aj{{Cf{B`}}}}}{{n{C`l}}}{A`AbAd}}<<<<`````","c":[],"p":[[5,"Session",1],[1,"str"],[1,"i32"],[5,"Document",106],[8,"RequestCookie",1],[6,"Error",1],[6,"Result",107],[10,"Read",108],[10,"Write",108],[10,"Send",109],[6,"Response",1],[5,"Drain",110],[6,"Option",111],[6,"ErrorCode",1],[1,"bool"],[10,"ApiSet",1],[6,"Bson",112],[5,"Formatter",113],[8,"Result",113],[5,"String",114],[1,"usize"],[5,"Duration",115],[1,"tuple"],[1,"unit"],[10,"Error",116],[5,"TypeId",117],[1,"slice"],[15,"Pending",101],[15,"Success",101],[15,"Error",101]],"b":[[55,"impl-Display-for-ErrorCode"],[56,"impl-Debug-for-ErrorCode"],[57,"impl-Debug-for-Error"],[58,"impl-Display-for-Error"]]}],\
["tor_interface",{"doc":"","t":"CCCCCPPFFGPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPFFPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFFPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPSSSSSSSFFFGPPPGFSSFFSSSSSSPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPIPGPPPGFFKPPFGGKPNNNMNMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOOOOO","n":["arti_client_tor_client","legacy_tor_client","mock_tor_client","tor_crypto","tor_provider","ArtiClientConfigBuilderError","ArtiClientError","ArtiClientOnionListener","ArtiClientTorClient","Error","KeyMgrInsertionFailure","NotImplemented","OnionServiceConfigBuilderError","TcpListenerAcceptFailed","TcpListenerBindFailed","TcpListenerLocalAddrFailed","TcpStreamConnectFailed","TcpStreamIntoFailed","TorHsServiceStartupError","TorKeyMgrBuilderError","TorKeyMgrError","TorPersistError","accept","add_client_auth","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","fmt","fmt","from","from","from","generate_token","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listener","new","release_token","remove_client_auth","report","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_slug","type_id","type_id","type_id","update","vzip","vzip","vzip","AddOnionFailed","CircuitTokenInvalid","DelOnionFailed","Error","GetInfoNetListenersSocksFailed","GetInfoVersionFailed","LegacyControlStreamCreationFailed","LegacyOnionListener","LegacyTorClient","LegacyTorControllerCreationFailed","LegacyTorProcessAuthenticationFailed","LegacyTorProcessCreationFailed","LegacyTorProcessTooOld","NoSocksListenersFound","OnionClientAuthAddFailed","OnionClientAuthRemoveFailed","SetConfDisableNetwork0Failed","SetEventsFailed","Socks5ConnectionFailed","TcpListenerBindFailed","TcpListenerLocalAddrFailed","WaitAsyncEventsFailed","accept","add_client_auth","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","drop","fmt","fmt","from","from","from","generate_token","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listener","new","release_token","remove_client_auth","report","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_slug","type_id","type_id","type_id","update","version","vzip","vzip","vzip","ClientAlreadyBootstrapped","ClientNotBootstrapped","Error","MockOnionListener","MockTorClient","OnionServiceAuthInvalid","OnionServiceNotFound","OnionServiceNotPublished","OnionServiceRequiresOnionAuth","TcpListenerBindFailed","TcpListenerLocalAddrFailed","accept","add_client_auth","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","default","drop","drop","fmt","fmt","from","from","from","generate_token","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listener","new","release_token","remove_client_auth","report","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_slug","type_id","type_id","type_id","update","vzip","vzip","vzip","ConversionError","ED25519_PRIVATE_KEYBLOB_BASE64_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_HEADER_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_SIZE","ED25519_PRIVATE_KEY_SIZE","ED25519_PUBLIC_KEY_SIZE","ED25519_SIGNATURE_SIZE","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","Error","KeyInvalid","One","ParseError","SignBit","V3OnionServiceId","V3_ONION_SERVICE_ID_STRING_LENGTH","V3_ONION_SERVICE_ID_STRING_SIZE","X25519PrivateKey","X25519PublicKey","X25519_PRIVATE_KEY_BASE64_LENGTH","X25519_PRIVATE_KEY_BASE64_SIZE","X25519_PRIVATE_KEY_SIZE","X25519_PUBLIC_KEY_BASE32_LENGTH","X25519_PUBLIC_KEY_BASE32_SIZE","X25519_PUBLIC_KEY_SIZE","Zero","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_base32","from_base64","from_key_blob","from_private_key","from_private_key","from_private_key","from_private_x25519","from_public_key","from_raw","from_raw","from_raw","from_raw","from_raw","from_service_id","from_string","generate","generate","hash","hash","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_valid","partial_cmp","report","sign_message","sign_message","sign_message_ex","to_base32","to_base32","to_base64","to_bytes","to_bytes","to_bytes","to_key_blob","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_slug","try_into_slug","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify_x25519","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BootstrapComplete","BootstrapStatus","CircuitToken","Domain","Error","Generic","Ip","LogReceived","OnionAddr","OnionAddrV3","OnionListener","OnionListenerImpl","OnionService","OnionServicePublished","OnionStream","TargetAddr","TorEvent","TorProvider","V3","__clone_box","__clone_box","__clone_box","accept","accept","add_client_auth","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","connect","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","generate_token","hash","hash","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","listener","local_addr","new","partial_cmp","partial_cmp","peer_addr","read","release_token","remove_client_auth","report","service_id","set_nonblocking","set_nonblocking","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_slug","try_into_slug","try_into_slug","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","virt_port","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","line","progress","service_id","summary","tag"],"q":[[0,"tor_interface"],[5,"tor_interface::arti_client_tor_client"],[78,"tor_interface::legacy_tor_client"],[158,"tor_interface::mock_tor_client"],[228,"tor_interface::tor_crypto"],[453,"tor_interface::tor_provider"],[632,"tor_interface::tor_provider::TorEvent"],[637,"core::option"],[638,"std::io::error"],[639,"core::result"],[640,"core::any"],[641,"core::fmt"],[642,"core::fmt"],[643,"alloc::sync"],[644,"alloc::rc"],[645,"tokio::runtime::runtime"],[646,"std::path"],[647,"tor_error::report"],[648,"tor_error::report"],[649,"alloc::string"],[650,"tor_persist::slug"],[651,"tor_persist::slug"],[652,"dyn_clone::sealed"],[653,"core::cmp"],[654,"core::hash"],[655,"der::error"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of bytes needed to store base64 encoded ed25519 …","The number of bytes needed to store the keyblob header","The number of bytes needed to store ed25519 private …","The number of bytes needed to store ed25519 private …","The number of bytes in an ed25519 secret key …","The number of bytes in an ed25519 public key …","The number of bytes in an ed25519 signature cbindgen:ignore","","","","","","","","","","The number of bytes needed to store onion service id as an …","The number of bytes needed to store onion service id as an …","","","The number of bytes needed to store base64 encoded x25519 …","The number of bytes needed to store base64 encoded x25519 …","The number of bytes in an x25519 private key …","The number of bytes needed to store base32 encoded x25519 …","The number of bytes needed to store base32 encoded x25519 …","The number of bytes in an x25519 publickey cbindgen:ignore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,14,14,0,0,0,14,14,14,14,14,14,14,14,14,14,14,14,1,6,1,6,14,1,6,14,6,1,6,14,1,6,14,6,14,14,1,6,14,6,1,6,14,1,6,14,1,6,14,1,6,14,6,6,6,6,14,1,14,14,1,6,14,1,6,14,14,1,6,14,6,1,6,14,38,38,38,0,38,38,38,0,0,38,38,38,38,38,38,38,38,38,38,38,38,38,36,37,36,37,38,36,37,38,37,36,37,38,36,37,38,37,36,38,38,36,37,38,37,36,37,38,36,37,38,36,37,38,36,37,38,37,37,37,37,38,36,38,38,36,37,38,36,37,38,38,36,37,38,37,37,36,37,38,41,41,0,0,0,41,41,41,41,41,41,39,40,39,40,41,39,40,41,40,39,40,41,39,40,41,40,40,39,40,41,41,39,40,41,40,39,40,41,39,40,41,39,40,41,39,40,41,40,40,40,40,41,39,41,41,39,40,41,39,40,41,41,39,40,41,40,39,40,41,49,0,0,0,0,0,0,0,0,0,0,0,49,47,49,0,0,0,0,0,0,0,0,0,0,0,0,47,20,43,46,8,21,7,47,20,49,43,46,8,21,7,47,20,49,43,46,8,21,7,47,43,21,7,20,49,43,46,8,21,7,47,20,49,43,46,8,21,7,47,20,43,46,8,21,7,47,20,43,46,8,21,7,47,7,7,20,43,46,8,21,7,21,21,21,7,7,7,20,49,49,43,46,8,21,7,7,20,49,43,46,8,21,7,47,47,21,8,20,43,21,7,20,7,20,43,46,8,21,43,7,20,8,21,7,20,49,43,46,8,21,7,47,20,49,43,46,8,21,7,47,20,49,43,46,8,21,7,47,20,49,43,46,8,21,7,47,7,7,49,20,8,20,43,21,8,20,46,8,20,20,43,46,8,21,7,47,49,7,20,49,43,46,8,21,7,47,20,49,43,46,8,21,7,47,49,7,20,49,43,46,8,21,7,47,46,46,20,49,43,46,8,21,7,47,34,34,0,57,0,10,57,34,0,0,0,0,57,34,0,0,0,0,56,55,56,57,53,23,54,2,23,55,56,57,34,10,2,23,55,56,57,34,10,54,2,23,55,56,57,34,10,2,23,55,56,57,34,10,55,56,57,55,56,57,55,56,55,56,54,2,2,55,56,55,55,55,56,56,56,2,55,55,56,56,57,34,10,10,2,23,55,56,57,34,10,10,10,10,54,55,56,2,23,55,56,57,34,10,2,23,55,56,57,34,10,2,55,56,57,34,10,2,23,55,56,57,34,10,54,2,55,55,56,2,2,54,54,10,55,53,23,55,56,57,55,56,10,2,2,23,55,56,57,34,10,2,23,55,56,57,34,10,55,56,10,2,23,55,56,57,34,10,54,55,2,23,55,56,57,34,10,2,2,60,61,62,61,61],"f":"``````````````````````{b{{j{{f{d}}h}}}}{{lnA`}{{j{AbAd}}}}{cAf{}}00000{l{{j{AbAd}}}}{ce{}{}}00000{{lnAh{f{Aj}}}{{j{dAd}}}}{{AlAn}B`}0{cc{}}00{lAj}444{{{Bb{c}}}{{Bb{Af}}}{}}00{{{Bd{c}}}{{Bd{Af}}}{}}00{{{Bf{c}}}{{Bf{Af}}}{}}00{{lBhAh{f{{Bl{Bj}}}}}{{j{BnAd}}}}{{{Bd{C`}}Cb}{{j{lAl}}}}{{lAj}Ab}{{ln}{{j{AbAd}}}}{c{{Cf{Cd}}}{}}{{bCh}{{j{Abh}}}}{Al{{f{Cj}}}}{cCl{}}{c{{j{e}}}{}{}}00000{c{{j{CnD`}}}{}}{cDb{}}00{l{{j{{Df{Dd}}Ad}}}}{ce{}{}}00``````````````````````{Dh{{j{{f{d}}h}}}}{{DjnA`}{{j{AbAd}}}}{cAf{}}00000{Dj{{j{AbAd}}}}444444{{DjnAh{f{Aj}}}{{j{dAd}}}}{DhAb}{{DlAn}B`}0{cc{}}00{DjAj}999{{{Bb{c}}}{{Bb{Af}}}{}}00{{{Bd{c}}}{{Bd{Af}}}{}}00{{{Bf{c}}}{{Bf{Af}}}{}}00{{DjBhAh{f{{Bl{Bj}}}}}{{j{BnAd}}}}{{CbCb}{{j{DjDl}}}}{{DjAj}Ab}{{Djn}{{j{AbAd}}}}{c{{Cf{Cd}}}{}}{{DhCh}{{j{Abh}}}}{Dl{{f{Cj}}}}{cCl{}}{c{{j{e}}}{}{}}00000{c{{j{CnD`}}}{}}{cDb{}}00{Dj{{j{{Df{Dd}}Ad}}}}`{ce{}{}}00```````````{Dn{{j{{f{d}}h}}}}{{E`nA`}{{j{AbAd}}}}{cAf{}}00000{E`{{j{AbAd}}}}444444{{E`nAh{f{Aj}}}{{j{dAd}}}}{{}E`}{DnAb}{E`Ab}{{EbAn}B`}0{cc{}}00{E`Aj};;;{{{Bb{c}}}{{Bb{Af}}}{}}00{{{Bd{c}}}{{Bd{Af}}}{}}00{{{Bf{c}}}{{Bf{Af}}}{}}00{{E`BhAh{f{{Bl{Bj}}}}}{{j{BnAd}}}}9{{E`Aj}Ab}{{E`n}{{j{AbAd}}}}{c{{Cf{Cd}}}{}}{{DnCh}{{j{Abh}}}}{Eb{{f{Cj}}}}{cCl{}}{c{{j{e}}}{}{}}00000{c{{j{CnD`}}}{}}{cDb{}}00{E`{{j{{Df{Dd}}Ad}}}}{ce{}{}}00````````````````````````````{{cEd}Ab{}}000000{cAf{}}000000000000000{Ef{{Ej{Eh}}}}{Bj{{Ej{Eh}}}}{n{{Ej{Eh}}}}5555555555555555{BhBh}{EfEf}{ElEl}{A`A`}{BjBj}{nn}{EnEn}{{ce}Ab{}{}}000000{{nn}F`}{{ce}F`{}{}}{{BhBh}Ch}{{EfEf}Ch}{{ElEl}Ch}{{A`A`}Ch}{{BjBj}Ch}{{nn}Ch}{{ce}Ch{}{}}00000{{BhAn}B`}{{FbAn}B`}0{{EfAn}B`}{{ElAn}B`}{{A`An}B`}{{BjAn}B`}{{nAn}B`}0{cc{}}0000000{ChEn}{Fd{{j{BjFb}}}}{Fd{{j{A`Fb}}}}{Fd{{j{BhFb}}}}{BhEf}{A`Bj}{Bhn}{A`{{j{{Ff{BhEn}}Fb}}}}{Efn}{{{Ej{Eh}}}{{j{BhFb}}}}{{{Ej{Eh}}}{{j{EfFb}}}}{{{Ej{Eh}}}{{j{ElFb}}}}{{{Ej{Eh}}}{{j{A`Fb}}}}{{{Ej{Eh}}}Bj}{n{{j{EfFb}}}}{Fd{{j{nFb}}}}{{}Bh}{{}A`}{{Bjc}AbFh}{{nc}AbFh}{ce{}{}}0000000{{{Bb{c}}}{{Bb{Af}}}{}}0000000{{{Bd{c}}}{{Bd{Af}}}{}}0000000{{{Bf{c}}}{{Bf{Af}}}{}}0000000{FdCh}{{nn}{{f{F`}}}}{c{{Cf{Cd}}}{}}{{Bh{Bl{Eh}}}El}{{A`{Bl{Eh}}}{{j{{Ff{ElEn}}Fb}}}}{{BhEf{Bl{Eh}}}El}{EfCl}{BjCl}{A`Cl}{Bh{{Ej{Eh}}}}{El{{Ej{Eh}}}}{A`{{Ej{Eh}}}}{BhCl}{ce{}{}}000000{cCl{}}0{c{{j{e}}}{}{}}000000000000000{c{{j{CnD`}}}{}}0{cDb{}}0000000{{El{Bl{Eh}}Ef}Ch}{{El{Bl{Eh}}BjEn}Ch}66666666```````````````````{{cEd}Ab{}}00{Fj{{j{{f{d}}h}}}}{Bn{{j{{f{d}}h}}}}{{FlnA`}{{j{AbAd}}}}{cAf{}}0000000000000{Fl{{j{AbAd}}}}<<<<<<<<<<<<<<{FnFn}{G`G`}{GbGb}{{ce}Ab{}{}}00{{FnFn}F`}{{G`G`}F`}{{ce}F`{}{}}0{{FlnAh{f{Aj}}}{{j{dAd}}}}{dc{}}0{{FnFn}Ch}{{G`G`}Ch}{{ce}Ch{}{}}00000{d{{j{Abh}}}}{{FnAn}B`}0{{G`An}B`}0{{GbAn}B`}{{DdAn}B`}{{AdAn}B`}0{cc{}}00000{DlAd}{EbAd}2{AlAd}{FlAj}{{Fnc}AbFh}{{G`c}AbFh}{ce{}{}}000000{{{Bb{c}}}{{Bb{Af}}}{}}000000{{{Bd{c}}}{{Bd{Af}}}{}}00000{{{Bf{c}}}{{Bf{Af}}}{}}000000{{FlBhAh{f{{Bl{Bj}}}}}{{j{BnAd}}}}{d{{f{G`}}}}{{nAh}Fn}{{FnFn}{{f{F`}}}}{{G`G`}{{f{F`}}}}{d{{f{Gb}}}}{{d{Bl{Eh}}}{{j{Gdh}}}}{{FlAj}Ab}{{Fln}{{j{AbAd}}}}{c{{Cf{Cd}}}{}}{Fnn}{{FjCh}{{j{Abh}}}}{{BnCh}{{j{Abh}}}}{ce{}{}}00{cCl{}}00{d{{j{dh}}}}{c{{j{e}}}{}{}}0000000000000{c{{j{CnD`}}}{}}00{cDb{}}000000{Fl{{j{{Df{Dd}}Ad}}}}{FnAh}7777777{{c{Bl{Eh}}}{{j{AbGf}}}{}}?`````","c":[],"p":[[5,"ArtiClientOnionListener",5],[5,"OnionStream",453],[6,"Option",637],[5,"Error",638],[6,"Result",639],[5,"ArtiClientTorClient",5],[5,"V3OnionServiceId",228],[5,"X25519PrivateKey",228],[1,"unit"],[6,"Error",453],[10,"Any",640],[1,"u16"],[8,"CircuitToken",453],[6,"Error",5],[5,"Formatter",641],[8,"Result",641],[5,"Box",642],[5,"Arc",643],[5,"Rc",644],[5,"Ed25519PrivateKey",228],[5,"X25519PublicKey",228],[1,"slice"],[5,"OnionListener",453],[5,"Runtime",645],[5,"Path",646],[5,"ReportHelper",647],[5,"Report",647],[1,"bool"],[10,"Error",648],[5,"String",649],[5,"Slug",650],[6,"BadSlug",650],[5,"TypeId",640],[6,"TorEvent",453],[5,"Vec",651],[5,"LegacyOnionListener",78],[5,"LegacyTorClient",78],[6,"Error",78],[5,"MockOnionListener",158],[5,"MockTorClient",158],[6,"Error",158],[5,"Private",652],[5,"Ed25519PublicKey",228],[1,"u8"],[1,"array"],[5,"Ed25519Signature",228],[6,"SignBit",228],[6,"Ordering",653],[6,"Error",228],[1,"str"],[1,"tuple"],[10,"Hasher",654],[10,"OnionListenerImpl",453],[10,"TorProvider",453],[5,"OnionAddrV3",453],[6,"OnionAddr",453],[6,"TargetAddr",453],[1,"usize"],[5,"Error",655],[15,"LogReceived",632],[15,"BootstrapStatus",632],[15,"OnionServicePublished",632]],"b":[[38,"impl-Display-for-Error"],[39,"impl-Debug-for-Error"],[117,"impl-Debug-for-Error"],[118,"impl-Display-for-Error"],[188,"impl-Debug-for-Error"],[189,"impl-Display-for-Error"],[327,"impl-Debug-for-Error"],[328,"impl-Display-for-Error"],[333,"impl-Debug-for-V3OnionServiceId"],[334,"impl-Display-for-V3OnionServiceId"],[529,"impl-Display-for-OnionAddrV3"],[530,"impl-Debug-for-OnionAddrV3"],[531,"impl-Display-for-OnionAddr"],[532,"impl-Debug-for-OnionAddr"],[535,"impl-Debug-for-Error"],[536,"impl-Display-for-Error"],[543,"impl-From%3CError%3E-for-Error"],[544,"impl-From%3CError%3E-for-Error"],[546,"impl-From%3CError%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
