var searchIndex = new Map(JSON.parse('[\
["gosling",{"doc":"","t":"CCCCCCFGPPPPPPPPISPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPPNNNNNNNNNNNNNNNNNNNNPGPPPNNNNNNNNNNNNNNNNNNNNPPPGPSSPPPPPPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGPPPPNNNNNNNNNNNNNNNNNNNNPPGPPPNNNNNNNNNNNNNNNNNNNN","n":["context","endpoint_client","endpoint_server","gosling","identity_client","identity_server","Context","ContextEvent","EndpointClientHandshakeCompleted","EndpointClientHandshakeFailed","EndpointServerChannelRequestReceived","EndpointServerHandshakeCompleted","EndpointServerHandshakeFailed","EndpointServerHandshakeRejected","EndpointServerHandshakeStarted","EndpointServerPublished","HandshakeHandle","INVALID_HANDSHAKE_HANDLE","IdentityClientChallengeReceived","IdentityClientHandshakeCompleted","IdentityClientHandshakeFailed","IdentityServerChallengeResponseReceived","IdentityServerEndpointRequestReceived","IdentityServerHandshakeCompleted","IdentityServerHandshakeFailed","IdentityServerHandshakeRejected","IdentityServerHandshakeStarted","IdentityServerPublished","TorBootstrapCompleted","TorBootstrapStatusReceived","TorLogReceived","as_any","as_any","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow_mut","borrow_mut","connect","endpoint_client_abort_handshake","endpoint_client_begin_handshake","endpoint_server_handle_channel_request_received","endpoint_server_start","endpoint_server_stop","fmt","from","from","generate_circuit_token","identity_client_abort_handshake","identity_client_begin_handshake","identity_client_handle_challenge_received","identity_server_handle_challenge_response_received","identity_server_handle_endpoint_request_received","identity_server_start","identity_server_stop","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","new","release_circuit_token","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","challenge_response","challenge_response_valid","channel_name","channel_name","client_allowed","client_allowed","client_auth_private_key","client_auth_public_key","client_auth_signature_valid","client_proof_signature_valid","client_proof_signature_valid","client_requested_channel_valid","client_requested_endpoint_valid","client_service_id","client_service_id","client_service_id","client_service_id","endpoint_challenge","endpoint_name","endpoint_name","endpoint_name","endpoint_private_key","endpoint_service_id","endpoint_service_id","endpoint_service_id","endpoint_service_id","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","handle","identity_service_id","line","progress","reason","reason","reason","reason","requested_channel","requested_endpoint","stream","stream","summary","tag","Error","HonkRPCFailure","IncorrectUsage","InvalidState","UnexpectedResponseReceived","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip","BadClient","Error","HonkRPCFailure","IncorrectUsage","InvalidState","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip","BadVersion","EndpointClientError","EndpointServerError","Error","Failure","GOSLING_CRATE_VERSION","GOSLING_PROTOCOL_VERSION","HandshakeHandleNotFound","HonkRpc","IdentityClientError","IdentityServerError","IncorrectUsage","InvalidArg","InvalidArgument","Io","RequestCookieRequired","RpcError","TorCrypto","TorNotConnected","TorProvider","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","report","source","to_string","try_from","try_from","try_from","try_from_primitive","try_into","try_into","try_into_slug","type_id","type_id","vzip","vzip","ClientCreationFailed","EndpointChallengeResponseTooLarge","Error","HonkRPCFailure","IncorrectUsage","InvalidState","UnexpectedResponseReceived","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip","BadClient","EndpointChallengeTooLarge","Error","HonkRPCFailure","IncorrectUsage","InvalidState","as_any","as_any_mut","borrow","borrow_mut","fmt","fmt","from","from","into","into_any","into_any_arc","into_any_rc","report","source","to_string","try_from","try_into","try_into_slug","type_id","vzip"],"q":[[0,"gosling"],[6,"gosling::context"],[75,"gosling::context::ContextEvent"],[130,"gosling::endpoint_client"],[155,"gosling::endpoint_server"],[180,"gosling::gosling"],[247,"gosling::identity_client"],[274,"gosling::identity_server"],[300,"core::any"],[301,"core::result"],[302,"tor_interface::tor_provider"],[303,"tor_interface::tor_provider"],[304,"tor_interface::tor_provider"],[305,"tor_interface::tor_crypto"],[306,"tor_interface::tor_crypto"],[307,"core::fmt"],[308,"alloc::boxed"],[309,"alloc::sync"],[310,"alloc::rc"],[311,"tor_interface::tor_provider"],[312,"core::any"],[313,"honk_rpc::honk_rpc"],[314,"tor_error::report"],[315,"tor_error::report"],[316,"tor_persist::slug"],[317,"tor_persist::slug"],[318,"tor_interface::tor_provider"]],"d":["","","","","","","","","","","","","","","","","cbindgen:ignore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","cbindgen:ignore","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,17,17,17,17,17,17,17,17,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,2,17,2,17,2,2,17,2,17,2,2,2,2,2,2,17,2,17,2,2,2,2,2,2,2,2,2,17,2,17,17,2,17,2,2,2,17,2,17,2,17,2,2,17,45,46,47,48,46,49,50,51,46,46,49,49,46,52,51,53,48,54,50,51,55,51,50,47,55,48,54,50,56,57,52,45,51,46,58,47,59,60,53,48,49,61,50,62,63,56,58,59,61,53,52,47,48,63,63,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,37,0,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,38,4,4,0,38,0,0,4,4,4,4,4,38,4,4,38,0,4,4,4,38,4,38,4,38,4,38,4,38,38,38,38,38,4,4,38,4,4,4,4,4,4,4,4,4,38,4,38,4,38,4,38,4,4,4,4,38,38,4,38,38,4,4,38,4,38,4,39,39,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,40,40,0,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40],"f":"```````````````````````````````{cb{}}000{d{{j{fh}}}}{ce{}{}}000{{dl{A`{n}}}{{j{Abh}}}}{{dAd}{{j{fh}}}}{{dAfAhAj}{{j{Adh}}}}{{dAdAl}{{j{fh}}}}{{dAnAjAfB`}{{j{fh}}}}{{dAf}{{j{fh}}}}{{BbBd}Bf}{cc{}}0{dn}7{{dAfAj}{{j{Adh}}}}{{dAdBh}{{j{fh}}}}7{{dAdAlAlBh}{{j{fh}}}}==<<{{{Bj{c}}}{{Bj{b}}}{}}0{{{Bl{c}}}{{Bl{b}}}{}}{{{Bn{c}}}{{Bn{b}}}{}}0{{{Bj{C`}}CbCbCdCf{A`{Cd}}An}{{j{dh}}}}{{dn}f}{c{{j{e}}}{}{}}000{cCh{}}0{d{{j{{Cj{Bb}}h}}}}{ce{}{}}0````````````````````````````````````````````````````````````{cb{}}011{{ClBd}Bf}0{CnCl}{cc{}}4<;:{c{{Db{D`}}}{}}{Cl{{A`{Dd}}}}{cAj{}}::{c{{j{DfDh}}}{}}:8`````7788{{DjBd}Bf}05{CnDj}:{{{Bj{c}}}{{Bj{b}}}{}}{{{Bl{c}}}{{Bl{b}}}{}}{{{Bn{c}}}{{Bn{b}}}{}}8{Dj{{A`{Dd}}}}7{c{{j{e}}}{}{}}07{cCh{}}{ce{}{}}````````````````````{cb{}}0001111{{DlDl}Al}{{ce}Al{}{}}00{{DlBd}Bf}{{hBd}Bf}0{cc{}}{Clh}{Dnh}{Djh}{E`h}{Ebh}{Cnh}{Edh}{Efh}8>>{{{Bj{c}}}{{Bj{b}}}{}}0{{{Bl{c}}}{{Bl{b}}}{}}0{{{Bn{c}}}{{Bn{b}}}{}}0{c{{Db{D`}}}{}}{h{{A`{Dd}}}}{cAj{}}{Cf{{j{Dl{Eh{Dl}}}}}}{c{{j{e}}}{}{}}0{c{{j{Dl{Eh{Dl}}}}}{}}11{c{{j{DfDh}}}{}}{cCh{}}0{ce{}{}}0```````{cb{}}011{{DnBd}Bf}0{CnDn}{cc{}}4?>=<{Dn{{A`{Dd}}}};99765``````4455{{E`Bd}Bf}0{CnE`}37{{{Bj{c}}}{{Bj{b}}}{}}{{{Bl{c}}}{{Bl{b}}}{}}{{{Bn{c}}}{{Bn{b}}}{}}{c{{Db{D`}}}{}}{E`{{A`{Dd}}}}{cAj{}}{c{{j{e}}}{}{}}0{c{{j{DfDh}}}{}}{cCh{}}{ce{}{}}","c":[],"p":[[10,"Any",300],[5,"Context",6],[1,"unit"],[6,"Error",180],[6,"Result",301],[6,"TargetAddr",302],[8,"CircuitToken",302],[6,"Option",303],[5,"OnionStream",302],[8,"HandshakeHandle",6],[5,"V3OnionServiceId",304],[5,"X25519PrivateKey",304],[5,"String",305],[1,"bool"],[5,"Ed25519PrivateKey",304],[5,"X25519PublicKey",304],[6,"ContextEvent",6],[5,"Formatter",306],[8,"Result",306],[5,"Document",307],[5,"Box",308],[5,"Arc",309],[5,"Rc",310],[10,"TorProvider",302],[1,"u16"],[5,"Duration",311],[1,"i32"],[5,"TypeId",300],[5,"VecDeque",312],[6,"Error",130],[6,"Error",313],[5,"ReportHelper",314],[5,"Report",314],[10,"Error",315],[5,"Slug",316],[6,"BadSlug",316],[6,"Error",155],[6,"RpcError",180],[6,"Error",247],[6,"Error",274],[5,"Error",317],[6,"Error",302],[6,"Error",304],[5,"TryFromPrimitiveError",318],[15,"IdentityServerChallengeResponseReceived",75],[15,"IdentityServerHandshakeRejected",75],[15,"EndpointClientHandshakeCompleted",75],[15,"EndpointServerHandshakeCompleted",75],[15,"EndpointServerHandshakeRejected",75],[15,"IdentityClientHandshakeCompleted",75],[15,"IdentityServerHandshakeCompleted",75],[15,"IdentityServerEndpointRequestReceived",75],[15,"EndpointServerChannelRequestReceived",75],[15,"IdentityClientChallengeReceived",75],[15,"EndpointServerPublished",75],[15,"IdentityClientHandshakeFailed",75],[15,"IdentityServerHandshakeStarted",75],[15,"IdentityServerHandshakeFailed",75],[15,"EndpointClientHandshakeFailed",75],[15,"EndpointServerHandshakeStarted",75],[15,"EndpointServerHandshakeFailed",75],[15,"TorLogReceived",75],[15,"TorBootstrapStatusReceived",75]],"b":[[139,"impl-Debug-for-Error"],[140,"impl-Display-for-Error"],[164,"impl-Display-for-Error"],[165,"impl-Debug-for-Error"],[213,"impl-Display-for-Error"],[214,"impl-Debug-for-Error"],[216,"impl-From%3CError%3E-for-Error"],[217,"impl-From%3CError%3E-for-Error"],[218,"impl-From%3CError%3E-for-Error"],[219,"impl-From%3CError%3E-for-Error"],[220,"impl-From%3CError%3E-for-Error"],[221,"impl-From%3CError%3E-for-Error"],[222,"impl-From%3CError%3E-for-Error"],[223,"impl-From%3CError%3E-for-Error"],[258,"impl-Debug-for-Error"],[259,"impl-Display-for-Error"],[284,"impl-Debug-for-Error"],[285,"impl-Display-for-Error"]]}],\
["honk_rpc",{"doc":"","t":"CKPPPPSSGPGPPPPPPPPPIPPPPGPPPPPPFPPPPPPNNNNNNNNNNNNNNNMNNNNNNNNNHNNHHHNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNOOOOO","n":["honk_rpc","ApiSet","BsonDocumentParseFailed","BsonDocumentSizeTooLarge","BsonDocumentSizeTooSmall","BsonParseFailed","DEFAULT_MAX_MESSAGE_SIZE","DEFAULT_MAX_WAIT_TIME","Error","Error","ErrorCode","InvalidMaxMesageSize","MessageConversionFailed","MessageParseFailed","MessageReadTimedOut","MessageTooBig","MessageVersionIncompatible","MessageWriteFailed","Pending","ReaderReadFailed","RequestCookie","RequestCookieInvalid","RequestFunctionInvalid","RequestNamespaceInvalid","RequestVersionInvalid","Response","ResponseCookieInvalid","ResponseStateInvalid","Runtime","SectionIdUnknown","SectionParseFailed","SectionTooLarge","Session","Success","Success","Unknown","UnknownErrorSectionReceived","WriterFlushFailed","WriterWriteFailed","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_call","client_drain_responses","client_next_response","eq","equivalent","equivalent","equivalent","exec_function","fmt","fmt","fmt","fmt","from","from","from","from","from","get_error_section_size","get_max_message_size","get_max_wait_time","get_message_overhead","get_request_section_size","get_response_section_size","into","into","into","into","into_stream","namespace","new","next_result","set_max_message_size","set_max_wait_time","source","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","update","vzip","vzip","vzip","vzip","cookie","cookie","cookie","error_code","result"],"q":[[0,"honk_rpc"],[1,"honk_rpc::honk_rpc"],[101,"honk_rpc::honk_rpc::Response"],[106,"bson::document"],[107,"core::result"],[108,"std::io"],[109,"std::io"],[110,"alloc::collections::vec_deque::drain"],[111,"core::option"],[112,"bson::bson"],[113,"core::fmt"],[114,"core::fmt"],[115,"core::time"],[116,"core::error"],[117,"core::any"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,6,6,6,14,0,0,0,11,0,6,6,14,6,14,14,6,11,6,0,14,14,14,14,0,14,14,14,14,14,6,0,11,14,14,6,6,6,11,1,14,6,11,1,14,6,1,1,1,14,14,14,14,16,14,14,6,6,11,1,14,14,6,0,1,1,0,0,0,11,1,14,6,1,16,1,16,1,1,6,14,6,11,1,14,6,11,1,14,6,11,1,14,6,16,1,11,1,14,6,28,29,30,30,29],"f":"```````````````````````````````````````{ce{}{}}0000000{{{b{c}}ddfh}{{n{jl}}}{A`AbAd}}{{{b{c}}}{{Ah{Af}}}{A`AbAd}}{{{b{c}}}{{Aj{Af}}}{A`AbAd}}{{AlAl}An}{{ce}An{}{}}00{{B`dfh{Aj{j}}}{{n{{Aj{Bb}}Al}}}}{{AlBd}Bf}0{{lBd}Bf}0{cc{}}00{fAl}1{{{Aj{j}}{Aj{Bh}}{Aj{Bb}}}{{n{Bjl}}}}{{{b{c}}}Bj{A`AbAd}}{{{b{c}}}Bl{A`AbAd}}{{}{{n{Bjl}}}}{{{Aj{j}}{Aj{Bh}}Bh{Aj{f}}{Aj{h}}}{{n{Bjl}}}}{{{Aj{Bb}}}{{n{Bjl}}}}{ce{}{}}000{{{b{c}}}c{A`AbAd}}{B`d}{c{{b{c}}}{A`AbAd}}{B`{{Aj{{Bn{j{Aj{Bb}}Al}}}}}}{{{b{c}}f}{{n{C`l}}}{A`AbAd}}{{{b{c}}Bl}C`{A`AbAd}}{l{{Aj{Cb}}}}{cBh{}}0{c{{n{e}}}{}{}}0000000{cCd{}}000{B`C`}{{{b{c}}{Aj{{Cf{B`}}}}}{{n{C`l}}}{A`AbAd}}<<<<`````","c":[],"p":[[5,"Session",1],[1,"str"],[1,"i32"],[5,"Document",106],[8,"RequestCookie",1],[6,"Error",1],[6,"Result",107],[10,"Read",108],[10,"Write",108],[10,"Send",109],[6,"Response",1],[5,"Drain",110],[6,"Option",111],[6,"ErrorCode",1],[1,"bool"],[10,"ApiSet",1],[6,"Bson",112],[5,"Formatter",113],[8,"Result",113],[5,"String",114],[1,"usize"],[5,"Duration",115],[1,"tuple"],[1,"unit"],[10,"Error",116],[5,"TypeId",117],[1,"slice"],[15,"Pending",101],[15,"Success",101],[15,"Error",101]],"b":[[55,"impl-Display-for-ErrorCode"],[56,"impl-Debug-for-ErrorCode"],[57,"impl-Debug-for-Error"],[58,"impl-Display-for-Error"]]}],\
["tor_interface",{"doc":"","t":"CCCCCPPFPFGPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPGPPPFFPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPGFFPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPSSSSSSSFFFGPPPGFSSFFSSSSSSPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPIPGPPPGFFKPPFGGKPNNNMNMNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNOOOOO","n":["arti_client_tor_client","legacy_tor_client","mock_tor_client","tor_crypto","tor_provider","ArtiClientConfigBuilderError","ArtiClientError","ArtiClientOnionListener","ArtiClientTorAddrError","ArtiClientTorClient","Error","KeyMgrInsertionFailure","NotImplemented","OnionServiceConfigBuilderError","TcpListenerAcceptFailed","TcpListenerBindFailed","TcpListenerLocalAddrFailed","TcpStreamConnectFailed","TcpStreamIntoFailed","TorHsServiceStartupError","TorKeyMgrBuilderError","TorKeyMgrError","TorPersistError","accept","add_client_auth","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","fmt","fmt","from","from","from","generate_token","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listener","new","release_token","remove_client_auth","report","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_slug","type_id","type_id","type_id","update","vzip","vzip","vzip","AddOnionFailed","CircuitTokenInvalid","DelOnionFailed","Error","GetInfoNetListenersSocksFailed","GetInfoVersionFailed","LegacyControlStreamCreationFailed","LegacyOnionListener","LegacyTorClient","LegacyTorControllerCreationFailed","LegacyTorProcessAuthenticationFailed","LegacyTorProcessCreationFailed","LegacyTorProcessTooOld","NoSocksListenersFound","OnionClientAuthAddFailed","OnionClientAuthRemoveFailed","SetConfDisableNetwork0Failed","SetEventsFailed","Socks5ConnectionFailed","TcpListenerBindFailed","TcpListenerLocalAddrFailed","WaitAsyncEventsFailed","accept","add_client_auth","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","drop","fmt","fmt","from","from","from","generate_token","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listener","new","release_token","remove_client_auth","report","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_slug","type_id","type_id","type_id","update","version","vzip","vzip","vzip","ClientAlreadyBootstrapped","ClientNotBootstrapped","Error","MockOnionListener","MockTorClient","NotImplemented","OnionServiceAuthInvalid","OnionServiceNotFound","OnionServiceNotPublished","OnionServiceRequiresOnionAuth","TcpListenerBindFailed","TcpListenerLocalAddrFailed","accept","add_client_auth","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","connect","default","drop","drop","fmt","fmt","from","from","from","generate_token","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","listener","new","release_token","remove_client_auth","report","set_nonblocking","source","to_string","try_from","try_from","try_from","try_into","try_into","try_into","try_into_slug","type_id","type_id","type_id","update","vzip","vzip","vzip","ConversionError","ED25519_PRIVATE_KEYBLOB_BASE64_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_HEADER_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_LENGTH","ED25519_PRIVATE_KEY_KEYBLOB_SIZE","ED25519_PRIVATE_KEY_SIZE","ED25519_PUBLIC_KEY_SIZE","ED25519_SIGNATURE_SIZE","Ed25519PrivateKey","Ed25519PublicKey","Ed25519Signature","Error","KeyInvalid","One","ParseError","SignBit","V3OnionServiceId","V3_ONION_SERVICE_ID_STRING_LENGTH","V3_ONION_SERVICE_ID_STRING_SIZE","X25519PrivateKey","X25519PublicKey","X25519_PRIVATE_KEY_BASE64_LENGTH","X25519_PRIVATE_KEY_BASE64_SIZE","X25519_PRIVATE_KEY_SIZE","X25519_PUBLIC_KEY_BASE32_LENGTH","X25519_PUBLIC_KEY_BASE32_SIZE","X25519_PUBLIC_KEY_SIZE","Zero","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","__clone_box","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_bytes","as_bytes","as_bytes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","compare","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_base32","from_base64","from_key_blob","from_private_key","from_private_key","from_private_key","from_private_x25519","from_public_key","from_raw","from_raw","from_raw","from_raw","from_raw","from_service_id","from_string","generate","generate","hash","hash","into","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_valid","partial_cmp","report","sign_message","sign_message","sign_message_ex","to_base32","to_base32","to_base64","to_bytes","to_bytes","to_bytes","to_key_blob","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_slug","try_into_slug","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify","verify_x25519","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BootstrapComplete","BootstrapStatus","CircuitToken","Domain","Error","Generic","Ip","LogReceived","OnionAddr","OnionAddrV3","OnionListener","OnionListenerImpl","OnionService","OnionServicePublished","OnionStream","TargetAddr","TorEvent","TorProvider","V3","__clone_box","__clone_box","__clone_box","accept","accept","add_client_auth","as_any","as_any","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","bootstrap","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","compare","compare","connect","deref","deref_mut","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","generate_token","hash","hash","into","into","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","listener","local_addr","new","partial_cmp","partial_cmp","peer_addr","read","release_token","remove_client_auth","report","service_id","set_nonblocking","set_nonblocking","to_owned","to_owned","to_owned","to_string","to_string","to_string","try_clone","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_slug","try_into_slug","try_into_slug","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update","virt_port","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","line","progress","service_id","summary","tag"],"q":[[0,"tor_interface"],[5,"tor_interface::arti_client_tor_client"],[79,"tor_interface::legacy_tor_client"],[159,"tor_interface::mock_tor_client"],[230,"tor_interface::tor_crypto"],[455,"tor_interface::tor_provider"],[635,"tor_interface::tor_provider::TorEvent"],[640,"core::option"],[641,"std::io::error"],[642,"core::result"],[643,"core::any"],[644,"core::fmt"],[645,"core::fmt"],[646,"alloc::sync"],[647,"alloc::rc"],[648,"tokio::runtime::runtime"],[649,"std::path"],[650,"tor_error::report"],[651,"tor_error::report"],[652,"alloc::string"],[653,"tor_persist::slug"],[654,"tor_persist::slug"],[655,"dyn_clone::sealed"],[656,"core::cmp"],[657,"core::hash"],[658,"der::error"]],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The number of bytes needed to store base64 encoded ed25519 …","The number of bytes needed to store the keyblob header","The number of bytes needed to store ed25519 private …","The number of bytes needed to store ed25519 private …","The number of bytes in an ed25519 secret key …","The number of bytes in an ed25519 public key …","The number of bytes in an ed25519 signature cbindgen:ignore","","","","","","","","","","The number of bytes needed to store onion service id as an …","The number of bytes needed to store onion service id as an …","","","The number of bytes needed to store base64 encoded x25519 …","The number of bytes needed to store base64 encoded x25519 …","The number of bytes in an x25519 private key …","The number of bytes needed to store base32 encoded x25519 …","The number of bytes needed to store base32 encoded x25519 …","The number of bytes in an x25519 publickey cbindgen:ignore","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</codeeturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,14,14,0,14,0,0,14,14,14,14,14,14,14,14,14,14,14,14,1,6,1,6,14,1,6,14,6,1,6,14,1,6,14,6,14,14,1,6,14,6,1,6,14,1,6,14,1,6,14,1,6,14,6,6,6,6,14,1,14,14,1,6,14,1,6,14,14,1,6,14,6,1,6,14,39,39,39,0,39,39,39,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,37,38,37,38,39,37,38,39,38,37,38,39,37,38,39,38,37,39,39,37,38,39,38,37,38,39,37,38,39,37,38,39,37,38,39,38,38,38,38,39,37,39,39,37,38,39,37,38,39,39,37,38,39,38,38,37,38,39,42,42,0,0,0,42,42,42,42,42,42,42,40,41,40,41,42,40,41,42,41,40,41,42,40,41,42,41,41,40,41,42,42,40,41,42,41,40,41,42,40,41,42,40,41,42,40,41,42,41,41,41,41,42,40,42,42,40,41,42,40,41,42,42,40,41,42,41,40,41,42,50,0,0,0,0,0,0,0,0,0,0,0,50,48,50,0,0,0,0,0,0,0,0,0,0,0,0,48,20,44,47,8,22,7,48,20,50,44,47,8,22,7,48,20,50,44,47,8,22,7,48,44,22,7,20,50,44,47,8,22,7,48,20,50,44,47,8,22,7,48,20,44,47,8,22,7,48,20,44,47,8,22,7,48,7,7,20,44,47,8,22,7,22,22,22,7,7,7,20,50,50,44,47,8,22,7,7,20,50,44,47,8,22,7,48,48,22,8,20,44,22,7,20,7,20,44,47,8,22,44,7,20,8,22,7,20,50,44,47,8,22,7,48,20,50,44,47,8,22,7,48,20,50,44,47,8,22,7,48,20,50,44,47,8,22,7,48,7,7,50,20,8,20,44,22,8,20,47,8,20,20,44,47,8,22,7,48,50,7,20,50,44,47,8,22,7,48,20,50,44,47,8,22,7,48,50,7,20,50,44,47,8,22,7,48,47,47,20,50,44,47,8,22,7,48,35,35,0,12,0,10,12,35,0,0,0,0,12,35,0,0,0,0,57,56,57,12,54,24,55,2,24,56,57,12,35,10,2,24,56,57,12,35,10,55,2,24,56,57,12,35,10,2,24,56,57,12,35,10,56,57,12,56,57,12,56,57,56,57,55,2,2,56,57,56,56,56,57,57,57,2,56,56,57,57,12,35,10,10,2,24,56,57,12,12,35,10,10,10,10,55,56,57,2,24,56,57,12,35,10,2,24,56,57,12,35,10,2,56,57,12,35,10,2,24,56,57,12,35,10,55,2,56,56,57,2,2,55,55,10,56,54,24,56,57,12,56,57,10,2,2,24,56,57,12,35,10,2,24,56,57,12,35,10,56,57,10,2,24,56,57,12,35,10,55,56,2,24,56,57,12,35,10,2,2,60,61,62,61,61],"f":"```````````````````````{b{{j{{f{d}}h}}}}{{lnA`}{{j{AbAd}}}}{cAf{}}00000{l{{j{AbAd}}}}{ce{}{}}00000{{lAh{f{Aj}}}{{j{dAd}}}}{{AlAn}B`}0{cc{}}00{lAj}444{{{Bb{c}}}{{Bb{Af}}}{}}00{{{Bd{c}}}{{Bd{Af}}}{}}00{{{Bf{c}}}{{Bf{Af}}}{}}00{{lBhBj{f{{Bn{Bl}}}}}{{j{C`Ad}}}}{{{Bd{Cb}}Cd}{{j{lAl}}}}{{lAj}Ab}{{ln}{{j{AbAd}}}}{c{{Ch{Cf}}}{}}{{bCj}{{j{Abh}}}}{Al{{f{Cl}}}}{cCn{}}{c{{j{e}}}{}{}}00000{c{{j{D`Db}}}{}}{cDd{}}00{l{{j{{Dh{Df}}Ad}}}}{ce{}{}}00``````````````````````{Dj{{j{{f{d}}h}}}}{{DlnA`}{{j{AbAd}}}}{cAf{}}00000{Dl{{j{AbAd}}}}444444{{DlAh{f{Aj}}}{{j{dAd}}}}{DjAb}{{DnAn}B`}0{cc{}}00{DlAj}999{{{Bb{c}}}{{Bb{Af}}}{}}00{{{Bd{c}}}{{Bd{Af}}}{}}00{{{Bf{c}}}{{Bf{Af}}}{}}00{{DlBhBj{f{{Bn{Bl}}}}}{{j{C`Ad}}}}{{CdCd}{{j{DlDn}}}}{{DlAj}Ab}{{Dln}{{j{AbAd}}}}{c{{Ch{Cf}}}{}}{{DjCj}{{j{Abh}}}}{Dn{{f{Cl}}}}{cCn{}}{c{{j{e}}}{}{}}00000{c{{j{D`Db}}}{}}{cDd{}}00{Dl{{j{{Dh{Df}}Ad}}}}`{ce{}{}}00````````````{E`{{j{{f{d}}h}}}}{{EbnA`}{{j{AbAd}}}}{cAf{}}00000{Eb{{j{AbAd}}}}444444{{EbAh{f{Aj}}}{{j{dAd}}}}{{}Eb}{E`Ab}{EbAb}{{EdAn}B`}0{cc{}}00{EbAj};;;{{{Bb{c}}}{{Bb{Af}}}{}}00{{{Bd{c}}}{{Bd{Af}}}{}}00{{{Bf{c}}}{{Bf{Af}}}{}}00{{EbBhBj{f{{Bn{Bl}}}}}{{j{C`Ad}}}}9{{EbAj}Ab}{{Ebn}{{j{AbAd}}}}{c{{Ch{Cf}}}{}}{{E`Cj}{{j{Abh}}}}{Ed{{f{Cl}}}}{cCn{}}{c{{j{e}}}{}{}}00000{c{{j{D`Db}}}{}}{cDd{}}00{Eb{{j{{Dh{Df}}Ad}}}}{ce{}{}}00````````````````````````````{{cEf}Ab{}}000000{cAf{}}000000000000000{Eh{{El{Ej}}}}{Bl{{El{Ej}}}}{n{{El{Ej}}}}5555555555555555{BhBh}{EhEh}{EnEn}{A`A`}{BlBl}{nn}{F`F`}{{ce}Ab{}{}}000000{{nn}Fb}{{ce}Fb{}{}}{{BhBh}Cj}{{EhEh}Cj}{{EnEn}Cj}{{A`A`}Cj}{{BlBl}Cj}{{nn}Cj}{{ce}Cj{}{}}00000{{BhAn}B`}{{FdAn}B`}0{{EhAn}B`}{{EnAn}B`}{{A`An}B`}{{BlAn}B`}{{nAn}B`}0{cc{}}0000000{CjF`}{Ff{{j{BlFd}}}}{Ff{{j{A`Fd}}}}{Ff{{j{BhFd}}}}{BhEh}{A`Bl}{Bhn}{A`{{j{{Fh{BhF`}}Fd}}}}{Ehn}{{{El{Ej}}}{{j{BhFd}}}}{{{El{Ej}}}{{j{EhFd}}}}{{{El{Ej}}}{{j{EnFd}}}}{{{El{Ej}}}{{j{A`Fd}}}}{{{El{Ej}}}Bl}{n{{j{EhFd}}}}{Ff{{j{nFd}}}}{{}Bh}{{}A`}{{Blc}AbFj}{{nc}AbFj}{ce{}{}}0000000{{{Bb{c}}}{{Bb{Af}}}{}}0000000{{{Bd{c}}}{{Bd{Af}}}{}}0000000{{{Bf{c}}}{{Bf{Af}}}{}}0000000{FfCj}{{nn}{{f{Fb}}}}{c{{Ch{Cf}}}{}}{{Bh{Bn{Ej}}}En}{{A`{Bn{Ej}}}{{j{{Fh{EnF`}}Fd}}}}{{BhEh{Bn{Ej}}}En}{EhCn}{BlCn}{A`Cn}{Bh{{El{Ej}}}}{En{{El{Ej}}}}{A`{{El{Ej}}}}{BhCn}{ce{}{}}000000{cCn{}}0{c{{j{e}}}{}{}}000000000000000{c{{j{D`Db}}}{}}0{cDd{}}0000000{{En{Bn{Ej}}Eh}Cj}{{En{Bn{Ej}}BlF`}Cj}66666666```````````````````{{cEf}Ab{}}00{Fl{{j{{f{d}}h}}}}{C`{{j{{f{d}}h}}}}{{FnnA`}{{j{AbAd}}}}{cAf{}}0000000000000{Fn{{j{AbAd}}}}<<<<<<<<<<<<<<{G`G`}{GbGb}{AhAh}{{ce}Ab{}{}}00{{G`G`}Fb}{{GbGb}Fb}{{ce}Fb{}{}}0{{FnAh{f{Aj}}}{{j{dAd}}}}{dc{}}0{{G`G`}Cj}{{GbGb}Cj}{{ce}Cj{}{}}00000{d{{j{Abh}}}}{{G`An}B`}0{{GbAn}B`}0{{AhAn}B`}{{DfAn}B`}{{AdAn}B`}0{cc{}}0000{{{Fh{nBj}}}Ah}11{AlAd}{DnAd}{EdAd}{FnAj}{{G`c}AbFj}{{Gbc}AbFj}{ce{}{}}000000{{{Bb{c}}}{{Bb{Af}}}{}}000000{{{Bd{c}}}{{Bd{Af}}}{}}00000{{{Bf{c}}}{{Bf{Af}}}{}}000000{{FnBhBj{f{{Bn{Bl}}}}}{{j{C`Ad}}}}{d{{f{Gb}}}}{{nBj}G`}{{G`G`}{{f{Fb}}}}{{GbGb}{{f{Fb}}}}{d{{f{Ah}}}}{{d{Bn{Ej}}}{{j{Gdh}}}}{{FnAj}Ab}{{Fnn}{{j{AbAd}}}}{c{{Ch{Cf}}}{}}{G`n}{{FlCj}{{j{Abh}}}}{{C`Cj}{{j{Abh}}}}{ce{}{}}00{cCn{}}00{d{{j{dh}}}}{c{{j{e}}}{}{}}0000000000000{c{{j{D`Db}}}{}}00{cDd{}}000000{Fn{{j{{Dh{Df}}Ad}}}}{G`Bj}7777777>{{c{Bn{Ej}}}{{j{AbGf}}}{}}`````","c":[],"p":[[5,"ArtiClientOnionListener",5],[5,"OnionStream",455],[6,"Option",640],[5,"Error",641],[6,"Result",642],[5,"ArtiClientTorClient",5],[5,"V3OnionServiceId",230],[5,"X25519PrivateKey",230],[1,"unit"],[6,"Error",455],[10,"Any",643],[6,"TargetAddr",455],[8,"CircuitToken",455],[6,"Error",5],[5,"Formatter",644],[8,"Result",644],[5,"Box",645],[5,"Arc",646],[5,"Rc",647],[5,"Ed25519PrivateKey",230],[1,"u16"],[5,"X25519PublicKey",230],[1,"slice"],[5,"OnionListener",455],[5,"Runtime",648],[5,"Path",649],[5,"ReportHelper",650],[5,"Report",650],[1,"bool"],[10,"Error",651],[5,"String",652],[5,"Slug",653],[6,"BadSlug",653],[5,"TypeId",643],[6,"TorEvent",455],[5,"Vec",654],[5,"LegacyOnionListener",79],[5,"LegacyTorClient",79],[6,"Error",79],[5,"MockOnionListener",159],[5,"MockTorClient",159],[6,"Error",159],[5,"Private",655],[5,"Ed25519PublicKey",230],[1,"u8"],[1,"array"],[5,"Ed25519Signature",230],[6,"SignBit",230],[6,"Ordering",656],[6,"Error",230],[1,"str"],[1,"tuple"],[10,"Hasher",657],[10,"OnionListenerImpl",455],[10,"TorProvider",455],[5,"OnionAddrV3",455],[6,"OnionAddr",455],[1,"usize"],[5,"Error",658],[15,"LogReceived",635],[15,"BootstrapStatus",635],[15,"OnionServicePublished",635]],"b":[[39,"impl-Debug-for-Error"],[40,"impl-Display-for-Error"],[118,"impl-Debug-for-Error"],[119,"impl-Display-for-Error"],[190,"impl-Debug-for-Error"],[191,"impl-Display-for-Error"],[329,"impl-Display-for-Error"],[330,"impl-Debug-for-Error"],[335,"impl-Debug-for-V3OnionServiceId"],[336,"impl-Display-for-V3OnionServiceId"],[531,"impl-Display-for-OnionAddrV3"],[532,"impl-Debug-for-OnionAddrV3"],[533,"impl-Debug-for-OnionAddr"],[534,"impl-Display-for-OnionAddr"],[537,"impl-Display-for-Error"],[538,"impl-Debug-for-Error"],[547,"impl-From%3CError%3E-for-Error"],[548,"impl-From%3CError%3E-for-Error"],[549,"impl-From%3CError%3E-for-Error"]]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
