(function() {var implementors = {
"gosling":[["impl Freeze for <a class=\"struct\" href=\"gosling/context/struct.Context.html\" title=\"struct gosling::context::Context\">Context</a>",1,["gosling::context::Context"]],["impl Freeze for <a class=\"enum\" href=\"gosling/context/enum.ContextEvent.html\" title=\"enum gosling::context::ContextEvent\">ContextEvent</a>",1,["gosling::context::ContextEvent"]],["impl Freeze for <a class=\"enum\" href=\"gosling/endpoint_client/enum.Error.html\" title=\"enum gosling::endpoint_client::Error\">Error</a>",1,["gosling::endpoint_client::Error"]],["impl Freeze for <a class=\"enum\" href=\"gosling/endpoint_server/enum.Error.html\" title=\"enum gosling::endpoint_server::Error\">Error</a>",1,["gosling::endpoint_server::Error"]],["impl Freeze for <a class=\"enum\" href=\"gosling/gosling/enum.RpcError.html\" title=\"enum gosling::gosling::RpcError\">RpcError</a>",1,["gosling::gosling::RpcError"]],["impl Freeze for <a class=\"enum\" href=\"gosling/gosling/enum.Error.html\" title=\"enum gosling::gosling::Error\">Error</a>",1,["gosling::gosling::Error"]],["impl Freeze for <a class=\"enum\" href=\"gosling/identity_client/enum.Error.html\" title=\"enum gosling::identity_client::Error\">Error</a>",1,["gosling::identity_client::Error"]],["impl Freeze for <a class=\"enum\" href=\"gosling/identity_server/enum.Error.html\" title=\"enum gosling::identity_server::Error\">Error</a>",1,["gosling::identity_server::Error"]]],
"honk_rpc":[["impl Freeze for <a class=\"enum\" href=\"honk_rpc/honk_rpc/enum.ErrorCode.html\" title=\"enum honk_rpc::honk_rpc::ErrorCode\">ErrorCode</a>",1,["honk_rpc::honk_rpc::ErrorCode"]],["impl Freeze for <a class=\"enum\" href=\"honk_rpc/honk_rpc/enum.Error.html\" title=\"enum honk_rpc::honk_rpc::Error\">Error</a>",1,["honk_rpc::honk_rpc::Error"]],["impl Freeze for <a class=\"enum\" href=\"honk_rpc/honk_rpc/enum.Response.html\" title=\"enum honk_rpc::honk_rpc::Response\">Response</a>",1,["honk_rpc::honk_rpc::Response"]],["impl&lt;RW&gt; Freeze for <a class=\"struct\" href=\"honk_rpc/honk_rpc/struct.Session.html\" title=\"struct honk_rpc::honk_rpc::Session\">Session</a>&lt;RW&gt;<div class=\"where\">where\n    RW: Freeze,</div>",1,["honk_rpc::honk_rpc::Session"]]],
"tor_interface":[["impl Freeze for <a class=\"enum\" href=\"tor_interface/arti_client_tor_client/enum.Error.html\" title=\"enum tor_interface::arti_client_tor_client::Error\">Error</a>",1,["tor_interface::arti_client_tor_client::Error"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/arti_client_tor_client/struct.ArtiClientOnionListener.html\" title=\"struct tor_interface::arti_client_tor_client::ArtiClientOnionListener\">ArtiClientOnionListener</a>",1,["tor_interface::arti_client_tor_client::ArtiClientOnionListener"]],["impl !Freeze for <a class=\"struct\" href=\"tor_interface/arti_client_tor_client/struct.ArtiClientTorClient.html\" title=\"struct tor_interface::arti_client_tor_client::ArtiClientTorClient\">ArtiClientTorClient</a>",1,["tor_interface::arti_client_tor_client::ArtiClientTorClient"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/legacy_tor_client/enum.Error.html\" title=\"enum tor_interface::legacy_tor_client::Error\">Error</a>",1,["tor_interface::legacy_tor_client::Error"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/legacy_tor_client/struct.LegacyOnionListener.html\" title=\"struct tor_interface::legacy_tor_client::LegacyOnionListener\">LegacyOnionListener</a>",1,["tor_interface::legacy_tor_client::LegacyOnionListener"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/legacy_tor_client/struct.LegacyTorClient.html\" title=\"struct tor_interface::legacy_tor_client::LegacyTorClient\">LegacyTorClient</a>",1,["tor_interface::legacy_tor_client::LegacyTorClient"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/mock_tor_client/enum.Error.html\" title=\"enum tor_interface::mock_tor_client::Error\">Error</a>",1,["tor_interface::mock_tor_client::Error"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/mock_tor_client/struct.MockOnionListener.html\" title=\"struct tor_interface::mock_tor_client::MockOnionListener\">MockOnionListener</a>",1,["tor_interface::mock_tor_client::MockOnionListener"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/mock_tor_client/struct.MockTorClient.html\" title=\"struct tor_interface::mock_tor_client::MockTorClient\">MockTorClient</a>",1,["tor_interface::mock_tor_client::MockTorClient"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/tor_crypto/enum.Error.html\" title=\"enum tor_interface::tor_crypto::Error\">Error</a>",1,["tor_interface::tor_crypto::Error"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_crypto/struct.Ed25519PrivateKey.html\" title=\"struct tor_interface::tor_crypto::Ed25519PrivateKey\">Ed25519PrivateKey</a>",1,["tor_interface::tor_crypto::Ed25519PrivateKey"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_crypto/struct.Ed25519PublicKey.html\" title=\"struct tor_interface::tor_crypto::Ed25519PublicKey\">Ed25519PublicKey</a>",1,["tor_interface::tor_crypto::Ed25519PublicKey"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_crypto/struct.Ed25519Signature.html\" title=\"struct tor_interface::tor_crypto::Ed25519Signature\">Ed25519Signature</a>",1,["tor_interface::tor_crypto::Ed25519Signature"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_crypto/struct.X25519PrivateKey.html\" title=\"struct tor_interface::tor_crypto::X25519PrivateKey\">X25519PrivateKey</a>",1,["tor_interface::tor_crypto::X25519PrivateKey"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_crypto/struct.X25519PublicKey.html\" title=\"struct tor_interface::tor_crypto::X25519PublicKey\">X25519PublicKey</a>",1,["tor_interface::tor_crypto::X25519PublicKey"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_crypto/struct.V3OnionServiceId.html\" title=\"struct tor_interface::tor_crypto::V3OnionServiceId\">V3OnionServiceId</a>",1,["tor_interface::tor_crypto::V3OnionServiceId"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/tor_crypto/enum.SignBit.html\" title=\"enum tor_interface::tor_crypto::SignBit\">SignBit</a>",1,["tor_interface::tor_crypto::SignBit"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_provider/struct.OnionAddrV3.html\" title=\"struct tor_interface::tor_provider::OnionAddrV3\">OnionAddrV3</a>",1,["tor_interface::tor_provider::OnionAddrV3"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/tor_provider/enum.OnionAddr.html\" title=\"enum tor_interface::tor_provider::OnionAddr\">OnionAddr</a>",1,["tor_interface::tor_provider::OnionAddr"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/tor_provider/enum.TargetAddr.html\" title=\"enum tor_interface::tor_provider::TargetAddr\">TargetAddr</a>",1,["tor_interface::tor_provider::TargetAddr"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/tor_provider/enum.TorEvent.html\" title=\"enum tor_interface::tor_provider::TorEvent\">TorEvent</a>",1,["tor_interface::tor_provider::TorEvent"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_provider/struct.OnionStream.html\" title=\"struct tor_interface::tor_provider::OnionStream\">OnionStream</a>",1,["tor_interface::tor_provider::OnionStream"]],["impl Freeze for <a class=\"struct\" href=\"tor_interface/tor_provider/struct.OnionListener.html\" title=\"struct tor_interface::tor_provider::OnionListener\">OnionListener</a>",1,["tor_interface::tor_provider::OnionListener"]],["impl Freeze for <a class=\"enum\" href=\"tor_interface/tor_provider/enum.Error.html\" title=\"enum tor_interface::tor_provider::Error\">Error</a>",1,["tor_interface::tor_provider::Error"]]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()