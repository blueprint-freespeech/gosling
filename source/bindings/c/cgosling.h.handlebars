// libgosling header is autogenerated, do not modify
#ifndef LIBCGOSLING_H
#define LIBCGOSLING_H

// gosling platform defines derived from: https://loumalouomega.github.io/OSPreprocessor/
#if (defined(_WIN32) || defined(_WIN64))
#   define GOSLING_PLATFORM_WINDOWS
#elif (defined(__linux__) || defined(__linux) || defined(linux) || defined(__gnu_linux__))
#   define GOSLING_PLATFORM_LINUX
#elif (defined(__APPLE__) && defined(__MACH__))
#   define GOSLING_PLATFORM_MACOS
#endif

#include <stdarg.h>
#include <stdbool.h>
#include <stddef.h>
#include <stdint.h>
#include <stdlib.h>
#include <assert.h>

// per-platform includes
#if defined(GOSLING_PLATFORM_WINDOWS)
#   include <winsock2.h>
#elif defined(GOSLING_PLATFORM_LINUX) || defined(GOSLING_PLATFORM_MACOS)
#   include <sys/socket.h>
#endif

{{#each constants}}
/**
{{#each comments}} * {{this}}
{{/each}}
 */
#define {{to_uppercase name}} {{value}}
{{/each}}

enum {
{{#each constants}}
    {{name}} = {{value}},
{{/each}}
};

{{#each aliases}}
/**
{{#each comments}} * {{this}}
{{/each}}
 */
{{#if (eq typename "uintptr_t")}}
typedef struct {{name}} {{name}};
{{else}}
typedef {{typename}} {{name}};
{{/if}}
{{/each}}

{{#each callbacks}}
/**
{{#each comments}} * {{this}}
{{/each}}
 */
typedef {{return_param}}(*{{name}})({{#each input_params}}{{#unless (eq @index 0)}}, {{/unless}}{{typename}} {{name}}{{/each}});
{{/each}}

#ifdef __cplusplus
extern "C" {
#endif // __cplusplus

{{#each functions}}
/**
{{#each comments}} * {{this}}
{{/each}}
 */
{{return_param}} {{name}}({{#each input_params}}{{#unless (eq @index 0)}}, {{/unless}}{{typename}} {{name}}{{/each}});
{{/each}}

#ifdef __cplusplus
}
#endif // __cplusplus

#endif // LIBCGOSLING_H
